<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>秋天的枫叶</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-05-04T07:33:44.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>秋天的枫叶</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>git提交项目至github</title>
    <link href="http://yoursite.com/2018/05/04/git%E6%8F%90%E4%BA%A4%E9%A1%B9%E7%9B%AE%E8%87%B3github/"/>
    <id>http://yoursite.com/2018/05/04/git提交项目至github/</id>
    <published>2018-05-04T06:52:18.000Z</published>
    <updated>2018-05-04T07:33:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>1、（先进入项目文件夹）通过命令 git init 把这个目录变成git可以管理的仓库<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git init</div></pre></td></tr></table></figure></p>
<p>2、把文件添加到版本库中，使用命令 git add .添加到暂存区里面去，不要忘记后面的小数点“.”，意为添加文件夹下的所有文件<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git add .</div></pre></td></tr></table></figure></p>
<p>3、用命令 git commit告诉Git，把文件提交到仓库。引号内为提交说明<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git commit -m <span class="string">'first commit'</span></div></pre></td></tr></table></figure></p>
<p>4、关联到远程库<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git remote add origin 你的远程库地址</div><div class="line">例如：git remote add origin https://github.com/cade8800/ionic-demo.git</div></pre></td></tr></table></figure></p>
<blockquote>
<p>远程库地址获取方式<br><img src="/2018/05/04/git提交项目至github/微信图片_20180504150314.png" alt="效果图"></p>
</blockquote>
<p>5、获取远程库与本地同步合并（如果远程库不为空必须做这一步，否则后面的提交会失败）<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git pull --rebase origin master</div></pre></td></tr></table></figure></p>
<p>6、把本地库的内容推送到远程，使用 git push命令，实际上是把当前分支master推送到远程。执行此命令后会要求输入用户名、密码，验证通过后即开始上传。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git push -u origin master</div></pre></td></tr></table></figure></p>
<p>7、状态查询命令<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git status</div></pre></td></tr></table></figure></p>
<p>备：详细请参考 <a href="http://www.cnblogs.com/tugenhua0707/p/4050072.html" target="_blank" rel="external">http://www.cnblogs.com/tugenhua0707/p/4050072.html</a></p>
<p><img src="/2018/05/04/git提交项目至github/359884-20171128123923050-1074438610.png" alt="效果图"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1、（先进入项目文件夹）通过命令 git init 把这个目录变成git可以管理的仓库&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>H5项目常见问题汇总及解决方案</title>
    <link href="http://yoursite.com/2017/12/22/H5%E9%A1%B9%E7%9B%AE%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://yoursite.com/2017/12/22/H5项目常见问题汇总及解决方案/</id>
    <published>2017-12-22T08:29:49.000Z</published>
    <updated>2017-12-22T08:55:08.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://www.qdfuns.com/notes/19075/63b3c42852852d29ff7197c53183f0ee.html" target="_blank" rel="external">转载自http://www.qdfuns.com/notes/19075/63b3c42852852d29ff7197c53183f0ee.html</a></p>
<h2 id="H5项目常见问题及注意事项"><a href="#H5项目常见问题及注意事项" class="headerlink" title="H5项目常见问题及注意事项"></a>H5项目常见问题及注意事项</h2><h4 id="Meta基础知识："><a href="#Meta基础知识：" class="headerlink" title="Meta基础知识："></a>Meta基础知识：</h4><ul>
<li><p>H5页面窗口自动调整到设备宽度，并禁止用户缩放页面</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//一、HTML页面结构</span></div><div class="line">&lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no"</span> /&gt;</div><div class="line"><span class="comment">// width    设置viewport宽度，为一个正整数，或字符串‘device-width’</span></div><div class="line"><span class="comment">// height   设置viewport高度，一般设置了宽度，会自动解析出高度，可以不用设置</span></div><div class="line"><span class="comment">// initial-scale    默认缩放比例，为一个数字，可以带小数</span></div><div class="line"><span class="comment">// minimum-scale    允许用户最小缩放比例，为一个数字，可以带小数</span></div><div class="line"><span class="comment">// maximum-scale    允许用户最大缩放比例，为一个数字，可以带小数</span></div><div class="line"><span class="comment">// user-scalable    是否允许手动缩放</span></div><div class="line"></div><div class="line"><span class="comment">//二、JS动态判断</span></div><div class="line"><span class="keyword">var</span> phoneWidth =  <span class="built_in">parseInt</span>(<span class="built_in">window</span>.screen.width);</div><div class="line"><span class="keyword">var</span> phoneScale = phoneWidth/<span class="number">640</span>;</div><div class="line"><span class="keyword">var</span> ua = navigator.userAgent;</div><div class="line"><span class="keyword">if</span> (<span class="regexp">/Android (\d+\.\d+)/</span>.test(ua))&#123;</div><div class="line">	<span class="keyword">var</span> version = <span class="built_in">parseFloat</span>(<span class="built_in">RegExp</span>.$<span class="number">1</span>);</div><div class="line">	<span class="keyword">if</span>(version&gt;<span class="number">2.3</span>)&#123;</div><div class="line">		<span class="built_in">document</span>.write(<span class="string">'&lt;meta name="viewport" content="width=640, minimum-scale = '</span>+phoneScale+<span class="string">', maximum-scale = '</span>+phoneScale+<span class="string">', target-densitydpi=device-dpi"&gt;'</span>);</div><div class="line">	&#125;<span class="keyword">else</span>&#123;</div><div class="line">		<span class="built_in">document</span>.write(<span class="string">'&lt;meta name="viewport" content="width=640, target-densitydpi=device-dpi"&gt;'</span>);</div><div class="line">	&#125;</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">	<span class="built_in">document</span>.write(<span class="string">'&lt;meta name="viewport" content="width=640, user-scalable=no, target-densitydpi=device-dpi"&gt;'</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>H5空白页基本meta标签</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;!-- 设置缩放 --&gt;</div><div class="line">&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1, user-scalable=no, minimal-ui&quot; /&gt;</div><div class="line">&lt;!-- 可隐藏地址栏，仅针对IOS的Safari（注：IOS7.0版本以后，safari上已看不到效果） --&gt;</div><div class="line">&lt;meta name=&quot;apple-mobile-web-app-capable&quot; content=&quot;yes&quot; /&gt;</div><div class="line">&lt;!-- 仅针对IOS的Safari顶端状态条的样式（可选default/black/black-translucent ） --&gt;</div><div class="line">&lt;meta name=&quot;apple-mobile-web-app-status-bar-style&quot; content=&quot;black&quot; /&gt;</div><div class="line">&lt;!-- IOS中禁用将数字识别为电话号码/忽略Android平台中对邮箱地址的识别 --&gt;</div><div class="line">&lt;meta name=&quot;format-detection&quot;content=&quot;telephone=no, email=no&quot; /&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>PC端基础meta标签</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">&lt;!-- 页面关键词--&gt;</div><div class="line">&lt;meta name=&quot;keywords&quot; content=&quot;your tags&quot; /&gt;</div><div class="line">&lt;!-- 页面描述--&gt;</div><div class="line">&lt;meta name=&quot;description&quot; content=&quot;150 words&quot; /&gt;</div><div class="line">&lt;!-- 搜索引擎索引方式：robotterms是一组使用逗号(,)分割的值，通常有如下几种取值：none，noindex，nofollow，all，index和follow。确保正确使用nofollow和noindex属性值。--&gt;</div><div class="line">&lt;meta name=&quot;robots&quot; content=&quot;index,follow&quot; /&gt;</div><div class="line">&lt;!--</div><div class="line">    all：文件将被检索，且页面上的链接可以被查询；</div><div class="line">    none：文件将不被检索，且页面上的链接不可以被查询；</div><div class="line">    index：文件将被检索；</div><div class="line">    follow：页面上的链接可以被查询；</div><div class="line">    noindex：文件将不被检索；</div><div class="line">    nofollow：页面上的链接不可以被查询。</div><div class="line"> --&gt;</div><div class="line"></div><div class="line"> &lt;!-- 页面重定向和刷新：content内的数字代表时间（秒），既多少时间后刷新。如果加url,则会重定向到指定网页（搜索引擎能够自动检测，也很容易被引擎视作误导而受到惩罚）。--&gt;</div><div class="line"> &lt;meta http-equiv=&quot;refresh&quot; content=&quot;0;url=&quot; /&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>页面缓存设置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;!-- 清除缓存 --&gt;</div><div class="line">&lt;meta http-equiv=&quot;pragma&quot; content=&quot;no-cache&quot;&gt;</div><div class="line">&lt;meta http-equiv=&quot;cache-control&quot; content=&quot;no-cache&quot;&gt;</div><div class="line">&lt;meta http-equiv=&quot;expires&quot; content=&quot;0&quot;&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>其他meta标签</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">&lt;!-- 启用360浏览器的极速模式(webkit) --&gt;</div><div class="line">&lt;meta name=&quot;renderer&quot; content=&quot;webkit&quot;&gt;</div><div class="line">&lt;!-- 避免IE使用兼容模式 --&gt;</div><div class="line">&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</div><div class="line">&lt;!-- 针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓 --&gt;</div><div class="line">&lt;meta name=&quot;HandheldFriendly&quot; content=&quot;true&quot;&gt;</div><div class="line">&lt;!-- 微软的老式浏览器 --&gt;</div><div class="line">&lt;meta name=&quot;MobileOptimized&quot; content=&quot;320&quot;&gt;</div><div class="line">&lt;!-- uc强制竖屏 --&gt;</div><div class="line">&lt;meta name=&quot;screen-orientation&quot; content=&quot;portrait&quot;&gt;</div><div class="line">&lt;!-- QQ强制竖屏 --&gt;</div><div class="line">&lt;meta name=&quot;x5-orientation&quot; content=&quot;portrait&quot;&gt;</div><div class="line">&lt;!-- UC强制全屏 --&gt;</div><div class="line">&lt;meta name=&quot;full-screen&quot; content=&quot;yes&quot;&gt;</div><div class="line">&lt;!-- QQ强制全屏 --&gt;</div><div class="line">&lt;meta name=&quot;x5-fullscreen&quot; content=&quot;true&quot;&gt;</div><div class="line">&lt;!-- UC应用模式 --&gt;</div><div class="line">&lt;meta name=&quot;browsermode&quot; content=&quot;application&quot;&gt;</div><div class="line">&lt;!-- QQ应用模式 --&gt;</div><div class="line">&lt;meta name=&quot;x5-page-mode&quot; content=&quot;app&quot;&gt;</div><div class="line">&lt;!-- windows phone 点击无高光 --&gt;</div><div class="line">&lt;meta name=&quot;msapplication-tap-highlight&quot; content=&quot;no&quot;&gt;</div><div class="line"></div><div class="line">&lt;meta name=&quot;author&quot; content=&quot;author name&quot; /&gt; &lt;!-- 定义网页作者 --&gt;</div><div class="line">&lt;meta name=&quot;google&quot; content=&quot;index,follow&quot; /&gt;</div><div class="line">&lt;meta name=&quot;googlebot&quot; content=&quot;index,follow&quot; /&gt;</div><div class="line">&lt;meta name=&quot;verify&quot; content=&quot;index,follow&quot; /&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="常见问题："><a href="#常见问题：" class="headerlink" title="常见问题："></a>常见问题：</h4><ul>
<li><p>移动端如何定义字体font-family</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">@ --------------------------------------中文字体的英文名称</div><div class="line">@ 宋体      SimSun</div><div class="line">@ 黑体      SimHei</div><div class="line">@ 微信雅黑   Microsoft Yahei</div><div class="line">@ 微软正黑体 Microsoft JhengHei</div><div class="line">@ 新宋体    NSimSun</div><div class="line">@ 新细明体  MingLiU</div><div class="line">@ 细明体    MingLiU</div><div class="line">@ 标楷体    DFKai-SB</div><div class="line">@ 仿宋     FangSong</div><div class="line">@ 楷体     KaiTi</div><div class="line">@ 仿宋_GB2312  FangSong_GB2312</div><div class="line">@ 楷体_GB2312  KaiTi_GB2312  </div><div class="line">@</div><div class="line">@ 说明：中文字体多数使用宋体、雅黑，英文用Helvetica</div><div class="line"></div><div class="line">body &#123; <span class="selector-tag">font-family</span>: <span class="selector-tag">Microsoft</span> <span class="selector-tag">Yahei</span>,<span class="selector-tag">SimSun</span>,<span class="selector-tag">Helvetica</span>; &#125;</div></pre></td></tr></table></figure>
</li>
<li><p>打电话发短信写邮件怎么实现</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">// 一、打电话</div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"tel:0755-10086"</span>&gt;</span>打电话给:0755-10086<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"></div><div class="line">//  二、发短信，winphone系统无效</div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"sms:10086"</span>&gt;</span>发短信给: 10086<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"></div><div class="line">// 三、写邮件</div><div class="line">//注：在添加这些功能时，第一个功能以"?"开头，后面的以"&amp;"开头</div><div class="line">//1.普通邮件</div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:863139978@qq.com"</span>&gt;</span>点击我发邮件<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">//2.收件地址后添加?cc=开头，可添加抄送地址（Android存在兼容问题）</div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:863139978@qq.com?cc=zhangqian0406@yeah.net"</span>&gt;</span>点击我发邮件<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">//3.跟着抄送地址后，写上&amp;bcc=,可添加密件抄送地址（Android存在兼容问题）</div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:863139978@qq.com?cc=zhangqian0406@yeah.net&amp;bcc=384900096@qq.com"</span>&gt;</span>点击我发邮件<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">//4.包含多个收件人、抄送、密件抄送人，用分号(;)隔开多个邮件人的地址</div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:863139978@qq.com;384900096@qq.com"</span>&gt;</span>点击我发邮件<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">//5.包含主题，用?subject=</div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:863139978@qq.com?subject=邮件主题"</span>&gt;</span>点击我发邮件<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">//6.包含内容，用?body=;如内容包含文本，使用%0A给文本换行</div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:863139978@qq.com?body=邮件主题内容%0A腾讯诚信%0A期待您的到来"</span>&gt;</span>点击我发邮件<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">//7.内容包含链接，含http(s)://等的文本自动转化为链接</div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:863139978@qq.com?body=http://www.baidu.com"</span>&gt;</span>点击我发邮件<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">//8.内容包含图片（PC不支持）</div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:863139978@qq.com?body=&lt;img src='images/1.jpg' /&gt;"</span>&gt;</span>点击我发邮件<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">//9.完整示例</div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:863139978@qq.com;384900096@qq.com?cc=zhangqian0406@yeah.net&amp;bcc=993233461@qq.com&amp;subject=[邮件主题]&amp;body=腾讯诚邀您参与%0A%0Ahttp://www.baidu.com%0A%0A&lt;img src='images/1.jpg' /&gt;"</span>&gt;</span>点击我发邮件<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>移动端touch事件（区分webkit和winphone）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">/* 当用户手指放在移动设备在屏幕上滑动会触发的touch事件 */</div><div class="line">// 以下支持webkit</div><div class="line">touchstart——当手指触碰屏幕时候发生。不管当前有多少只手指</div><div class="line">touchmove——当手指在屏幕上滑动时连续触发。通常我们再滑屏页面，会调用event的preventDefault()可以阻止默认情况的发生：阻止页面滚动</div><div class="line">touchend——当手指离开屏幕时触发</div><div class="line">touchcancel——系统停止跟踪触摸时候会触发。例如在触摸过程中突然页面alert()一个提示框，此时会触发该事件，这个事件比较少用</div><div class="line"></div><div class="line">//TouchEvent说明：</div><div class="line">touches：屏幕上所有手指的信息</div><div class="line">targetTouches：手指在目标区域的手指信息</div><div class="line">changedTouches：最近一次触发该事件的手指信息</div><div class="line">touchend时，touches与targetTouches信息会被删除，changedTouches保存的最后一次的信息，最好用于计算手指信息</div><div class="line"></div><div class="line">//参数信息(changedTouches[0])</div><div class="line">clientX、clientY在显示区的坐标</div><div class="line">target：当前元素</div><div class="line"></div><div class="line">//事件响应顺序</div><div class="line">ontouchstart  &gt; ontouchmove  &gt; ontouchend &gt; onclick</div><div class="line"></div><div class="line">// 以下支持winphone 8</div><div class="line">MSPointerDown——当手指触碰屏幕时候发生。不管当前有多少只手指</div><div class="line">MSPointerMove——当手指在屏幕上滑动时连续触发。通常我们再滑屏页面，会调用css的html&#123;-ms-touch-action: none;&#125;可以阻止默认情况的发生：阻止页面滚动</div><div class="line">MSPointerUp——当手指离开屏幕时触发</div></pre></td></tr></table></figure>
</li>
<li><p>移动端click屏幕产生200-300ms的延时响应</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">说明：移动设备上的web网页是有300ms延迟的，玩玩会造成按钮点击延迟甚至是点击失效。</div><div class="line"></div><div class="line">以下是历史原因，来源一个公司内一个同事的分享：</div><div class="line">2007年苹果发布首款iphone上IOS系统搭载的safari为了将适用于PC端上大屏幕的网页能比较好的展示在手机端上，使用了双击缩放(double tap to zoom)的方案，比如你在手机上用浏览器打开一个PC上的网页，你可能在看到页面内容虽然可以撑满整个屏幕，但是字体、图片都很小看不清，此时可以快速双击屏幕上的某一部分，你就能看清该部分放大后的内容，再次双击后能回到原始状态。</div><div class="line"></div><div class="line">双击缩放是指用手指在屏幕上快速点击两次，iOS 自带的 Safari 浏览器会将网页缩放至原始比例。</div><div class="line"></div><div class="line">原因就出在浏览器需要如何判断快速点击上，当用户在屏幕上单击某一个元素时候，例如跳转链接&lt;a href=&quot;#&quot;&gt;&lt;/a&gt;，此处浏览器会先捕获该次单击，但浏览器不能决定用户是单纯要点击链接还是要双击该部分区域进行缩放操作，所以，捕获第一次单击后，浏览器会先Hold一段时间t，如果在t时间区间里用户未进行下一次点击，则浏览器会做单击跳转链接的处理，如果t时间里用户进行了第二次单击操作，则浏览器会禁止跳转，转而进行对该部分区域页面的缩放操作。那么这个时间区间t有多少呢？在IOS safari下，大概为300毫秒。这就是延迟的由来。造成的后果用户纯粹单击页面，页面需要过一段时间才响应，给用户慢体验感觉，对于web开发者来说是，页面js捕获click事件的回调函数处理，需要300ms后才生效，也就间接导致影响其他业务逻辑的处理。</div><div class="line"></div><div class="line">//解决方案：</div><div class="line">fastclick可以解决在手机上点击事件的300ms延迟</div><div class="line">zepto的touch模块，tap事件也是为了解决在click的延迟问题</div></pre></td></tr></table></figure>
</li>
<li><p>Rentina显示屏原理及设计方案</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">说明：retina屏是一种具备超高像素密度的液晶屏，同样大小的屏幕上显示的像素点由1个变为多个，如在同样带下的屏幕上，苹果设备的retina显示屏中，像素点1个变为4个。</div><div class="line">在高清显示屏中的位图被放大，图片会变得模糊，因此移动端的视觉稿通常会设计为传统PC的2倍。</div><div class="line">那么，前端的应对方案是：设计稿切出来的图片长宽保证为偶数，并使用backgroud-size把图片缩小为原来的1/2</div><div class="line"></div><div class="line">//例如图片宽高为：200px*200px，那么写法如下</div><div class="line">.css&#123;width:100px;height:100px;background-size:100px 100px;&#125;</div><div class="line">//其它元素的取值为原来的1/2，例如视觉稿40px的字体，使用样式的写法为20px</div><div class="line">.css&#123;font-size:20px&#125;</div><div class="line"></div><div class="line">//image-set设计Rentina背景图</div><div class="line">image-set,webkit私有属性，也是CSS4的属性，为解决Rentina屏幕下的图像而生。</div><div class="line">.css &#123;</div><div class="line">	background: url(images/bg.jpg) no-repeat center;</div><div class="line">	background: -webkit-image-set(</div><div class="line">	url(images/bg.jpg) 1x,     //支持image-set普通屏</div><div class="line">	url(images/bg-2x.jpg) 2x); //支持image-set的Rentinan</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>点击元素产生背景或边框怎么去掉</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">//ios用户点击一个链接，会出现一个半透明灰色遮罩, 如果想要禁用，可设置-webkit-tap-highlight-color的alpha值为0去除灰色半透明遮罩；</div><div class="line">//android用户点击一个链接，会出现一个边框或者半透明灰色遮罩, 不同生产商定义出来额效果不一样，可设置-webkit-tap-highlight-color的alpha值为0去除部分机器自带的效果；</div><div class="line">//winphone系统,点击标签产生的灰色半透明背景，能通过设置&lt;meta name=&quot;msapplication-tap-highlight&quot; content=&quot;no&quot;&gt;去掉；</div><div class="line">//特殊说明：有些机型去除不了，如小米2。对于按钮类还有个办法，不使用a或者input标签，直接用div标签</div><div class="line">a,button,input,textarea &#123;</div><div class="line">	-webkit-tap-highlight-color: rgba(0,0,0,0);</div><div class="line">	-webkit-user-modify:read-write-plaintext-only; //-webkit-user-modify有个副作用，就是输入法不再能够输入多个字符</div><div class="line">&#125;   </div><div class="line">// 也可以</div><div class="line">* &#123; -webkit-tap-highlight-color: rgba(0,0,0,0); &#125;</div><div class="line">//winphone下</div><div class="line">&lt;meta name=&quot;msapplication-tap-highlight&quot; content=&quot;no&quot;&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>美化表单元素</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">//一、使用appearance改变webkit浏览器的默认外观</div><div class="line">input,select &#123; -webkit-appearance:none; appearance: none; &#125;</div><div class="line"></div><div class="line">//二、winphone下，使用伪元素改变表单元素默认外观</div><div class="line">//1.禁用select默认箭头，::-ms-expand修改表单控件下拉箭头，设置隐藏并使用背景图片来修饰</div><div class="line">select::-ms-expand &#123; display:none; &#125;</div><div class="line"></div><div class="line">//2.禁用radio和checkbox默认样式，::-ms-check修改表单复选框或单选框默认图标，设置隐藏并使用背景图片来修饰</div><div class="line">input[type=radio]::-ms-check,</div><div class="line">input[type=checkbox]::-ms-check &#123; display:none; &#125;</div><div class="line"></div><div class="line">//3.禁用pc端表单输入框默认清除按钮，::-ms-clear修改清除按钮，设置隐藏并使用背景图片来修饰</div><div class="line">input[type=text]::-ms-clear,</div><div class="line">input[type=tel]::-ms-clear,</div><div class="line">input[type=number]::-ms-clear &#123; display:none; &#125;</div></pre></td></tr></table></figure>
</li>
<li><p>移动端字体单位font-size选择px还是rem</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">// 如需适配多种移动设备，建议使用rem。以下为参考值：</div><div class="line">html &#123; font-size: 62.5%; &#125;   //10*16 = 62.5%</div><div class="line">//设置12px字体   这里注意在rem前要加上对应的px值，解决不支持rem的浏览器的兼容问题，做到优雅降级</div><div class="line">body &#123; font-size:12px; font-size:1.2rem; &#125;</div></pre></td></tr></table></figure>
</li>
<li><p>超实用的CSS样式</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">//去掉webkit的滚动条——display: none;</div><div class="line">//其他参数</div><div class="line">::-webkit-scrollba //滚动条整体部分</div><div class="line">::-webkit-scrollbar-thumb   //滚动条内的小方块</div><div class="line">::-webkit-scrollbar-track   //滚动条轨道</div><div class="line">::-webkit-scrollbar-button  //滚动条轨道两端按钮</div><div class="line">::-webkit-scrollbar-track-piece  //滚动条中间部分，内置轨道</div><div class="line">::-webkit-scrollbar-corner       //边角，两个滚动条交汇处</div><div class="line">::-webkit-resizer            //两个滚动条的交汇处上用于通过拖动调整元素大小的小控件</div><div class="line"></div><div class="line">// 禁止长按链接与图片弹出菜单</div><div class="line">a,img &#123; -webkit-touch-callout: none &#125;    </div><div class="line"></div><div class="line">// 禁止ios和android用户选中文字</div><div class="line">html,body &#123;-webkit-user-select:none; user-select: none; &#125;</div><div class="line"></div><div class="line">// 改变输入框placeholder的颜色值</div><div class="line">::-webkit-input-placeholder &#123; /* WebKit browsers */</div><div class="line">color: #999; &#125;</div><div class="line">:-moz-placeholder &#123; /* Mozilla Firefox 4 to 18 */</div><div class="line">color: #999; &#125;</div><div class="line">::-moz-placeholder &#123; /* Mozilla Firefox 19+ */</div><div class="line">color: #999; &#125;</div><div class="line">:-ms-input-placeholder &#123; /* Internet Explorer 10+ */</div><div class="line">color: #999; &#125;</div><div class="line">input:focus::-webkit-input-placeholder&#123; color:#999; &#125;</div><div class="line"></div><div class="line">// android上去掉语音输入按钮</div><div class="line">input::-webkit-input-speech-button &#123;display: none&#125;</div><div class="line"></div><div class="line">// 阻止windows Phone的默认触摸事件</div><div class="line">/*说明：winphone下默认触摸事件事件使用e.preventDefault是无效的，可通过样式来禁用，如：*/</div><div class="line">html &#123; -ms-touch-action:none; &#125; //禁止winphone默认触摸事件</div></pre></td></tr></table></figure>
</li>
<li><p>取消input在ios下，输入的时候英文首字母的默认大写</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">autocapitalize</span>=<span class="string">"off"</span> <span class="attr">autocorrect</span>=<span class="string">"off"</span> /&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>手机拍照和上传图片</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">//IOS有拍照、录像、选取本地图片功能，部分Android只有选择本地图片功能。Winphone不支持</div><div class="line">&lt;input type=&quot;file&quot; accept=&quot;images/*&quot; /&gt;</div><div class="line">&lt;input type=&quot;file&quot; accept=&quot;video/*&quot; /&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>屏幕旋转的事件和样式</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">//JS处理</div><div class="line">function orientInit()&#123;</div><div class="line">	var orientChk = document.documentElement.clientWidth &gt; document.documentElement.clientHeight?&apos;landscape&apos;:&apos;portrait&apos;;</div><div class="line">	if(orientChk ==&apos;lapdscape&apos;)&#123;</div><div class="line">		//这里是横屏下需要执行的事件</div><div class="line">	&#125;else&#123;</div><div class="line">		//这里是竖屏下需要执行的事件</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">orientInit();</div><div class="line">window.addEventListener(&apos;onorientationchange&apos; in window?&apos;orientationchange&apos;:&apos;resize&apos;, function()&#123;</div><div class="line">	setTimeout(orientInit, 100);</div><div class="line">&#125;,false)</div><div class="line"></div><div class="line">//CSS处理</div><div class="line">//竖屏时样式</div><div class="line">@media all and (orientation:portrait)&#123;   &#125;</div><div class="line">//横屏时样式</div><div class="line">@media all and (orientation:landscape)&#123;   &#125;</div></pre></td></tr></table></figure>
</li>
<li><p>audio元素和video元素在ios和andriod中无法自动播放</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">//音频，写法一</div><div class="line">&lt;audio src=&quot;music/bg.mp3&quot; autoplay loop controls&gt;你的浏览器还不支持哦&lt;/audio&gt;</div><div class="line"></div><div class="line">//音频，写法二</div><div class="line">&lt;audio controls=&quot;controls&quot;&gt;</div><div class="line">	&lt;source src=&quot;music/bg.ogg&quot; type=&quot;audio/ogg&quot;&gt;&lt;/source&gt;</div><div class="line">	&lt;source src=&quot;music/bg.mp3&quot; type=&quot;audio/mpeg&quot;&gt;&lt;/source&gt;</div><div class="line">	优先播放音乐bg.ogg，不支持在播放bg.mp3</div><div class="line">&lt;/audio&gt;</div><div class="line"></div><div class="line">//JS绑定自动播放（操作window时，播放音乐）</div><div class="line">$(window).one(&apos;touchstart&apos;, function()&#123;</div><div class="line">	music.play();</div><div class="line">&#125;)</div><div class="line"></div><div class="line">//微信下兼容处理</div><div class="line">document.addEventListener(&quot;WeixinJSBridgeReady&quot;, function () &#123;</div><div class="line">    music.play();</div><div class="line">&#125;, false);</div><div class="line"></div><div class="line">//小结</div><div class="line">//1.audio元素的autoplay属性在IOS及Android上无法使用，在PC端正常</div><div class="line">//2.audio元素没有设置controls时，在IOS及Android会占据空间大小，而在PC端Chrome是不会占据任何空间</div></pre></td></tr></table></figure>
</li>
<li><p>重力感应事件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">// 运用HTML5的deviceMotion，调用重力感应事件</div><div class="line">if(window.DeviceMotionEvent)&#123;</div><div class="line">	document.addEventListener(&apos;devicemotion&apos;, deviceMotionHandler, false)</div><div class="line">&#125;</div><div class="line"></div><div class="line">var speed = 30;</div><div class="line">var x = y = z = lastX = lastY = lastZ = 0;</div><div class="line">function deviceMotionHandler(eventData)&#123;</div><div class="line">	var acceleration = event.accelerationIncludingGravity;</div><div class="line">	x = acceleration.x;</div><div class="line">	y = acceleration.y;</div><div class="line">	z = acceleration.z;</div><div class="line">	if(Math.abs(x-lastX)&gt;speed || Math.abs(y-lastY)&gt;speed || Math.abs(z-lastZ)&gt;speed )&#123;</div><div class="line">		//这里是摇动后要执行的方法</div><div class="line">		yaoAfter();</div><div class="line">	&#125;</div><div class="line">	lastX = x;</div><div class="line">	lastY = y;</div><div class="line">	lastZ = z;</div><div class="line">&#125;</div><div class="line"></div><div class="line">function yaoAfter()&#123;</div><div class="line">	//do something</div><div class="line">&#125;</div><div class="line"></div><div class="line">//说明：说见案例摇一摇效果中yao.js</div></pre></td></tr></table></figure>
</li>
<li><p>微信浏览器用户调整字体大小后页面矬了，怎么阻止用户调整</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">//以下代码可使Android机页面不再受用户字体缩放强制改变大小，但是会有1S左右延时，期间可以考虑loading来处理</div><div class="line">if (typeof(WeixinJSBridge) == &quot;undefined&quot;) &#123;</div><div class="line">	document.addEventListener(&quot;WeixinJSBridgeReady&quot;, function (e) &#123;</div><div class="line">	    setTimeout(function()&#123;</div><div class="line">		    WeixinJSBridge.invoke(&apos;setFontSizeCallback&apos;, &#123; &apos;fontSize&apos;:0&#125;, function(res)&#123;</div><div class="line">			    alert(JSON.stringify(res));</div><div class="line">		    &#125;)</div><div class="line">	    &#125;, 0)</div><div class="line">	&#125;);</div><div class="line">&#125;else&#123;</div><div class="line">    setTimeout(function()&#123;</div><div class="line">	    WeixinJSBridge.invoke(&apos;setFontSizeCallback&apos;, &#123; &apos;fontSize&apos;:0&#125;, function(res)&#123;</div><div class="line">		    alert(JSON.stringify(res));</div><div class="line">	    &#125;)</div><div class="line">    &#125;, 0)</div><div class="line">&#125;</div><div class="line"></div><div class="line">//IOS下可使用 -webkit-text-size-adjust禁止用户调整字体大小</div><div class="line">body &#123; -webkit-text-size-adjust:100%!important; &#125;</div><div class="line"></div><div class="line">//最好的解决方案：最好使用rem或百分比布局</div></pre></td></tr></table></figure>
</li>
<li><p>定位的坑</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">//fixed定位</div><div class="line">//1.ios下fixed元素容易定位出错，软键盘弹出时，影响fixed元素定位</div><div class="line">//2.android下fixed表现要比iOS更好，软键盘弹出时，不会影响fixed元素定位</div><div class="line">//3.ios4下不支持position:fixed</div><div class="line">//解决方案：使用[Iscroll](http://cubiq.org/iscroll-5)，如：</div><div class="line">&lt;div id=&quot;wrapper&quot;&gt;</div><div class="line">        &lt;ul&gt;</div><div class="line">               &lt;li&gt;&lt;/li&gt;</div><div class="line">               .....</div><div class="line">        &lt;/ul&gt;</div><div class="line">&lt;/div&gt;</div><div class="line">&lt;script src=&quot;iscroll.js&quot;&gt;&lt;/script&gt;</div><div class="line">&lt;script&gt;</div><div class="line">	var myscroll;</div><div class="line">	function loaded()&#123;</div><div class="line">		myscroll=new iScroll(&quot;wrapper&quot;);</div><div class="line">	&#125;</div><div class="line">	window.addEventListener(&quot;DOMContentLoaded&quot;,loaded,false);</div><div class="line">&lt;/script&gt;</div><div class="line"></div><div class="line"></div><div class="line">//position定位</div><div class="line">//Android下弹出软键盘弹出时，影响absolute元素定位</div><div class="line">//解决方案:</div><div class="line">var ua = navigator.userAgent.indexOf(&apos;Android&apos;);</div><div class="line">if(ua&gt;-1)&#123;</div><div class="line">	$(&apos;.ipt&apos;).on(&apos;focus&apos;, function()&#123;</div><div class="line">		$(&apos;.css&apos;).css(&#123;&apos;visibility&apos;:&apos;hidden&apos;&#125;)</div><div class="line">	&#125;).on(&apos;blur&apos;, function()&#123;</div><div class="line">		$(&apos;.css&apos;).css(&#123;&apos;visibility&apos;:&apos;visible&apos;&#125;)</div><div class="line">	&#125;)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>播放视频不全屏</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--</span></div><div class="line">1.ios7+支持自动播放</div><div class="line">2.支持Airplay的设备（如：音箱、Apple TV)播放</div><div class="line">x-webkit-airplay="true"</div><div class="line">3.播放视频不全屏</div><div class="line">webkit-playsinline="true"</div><div class="line">--&gt;</div><div class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">x-webkit-airplay</span>=<span class="string">"true"</span> <span class="attr">webkit-playsinline</span>=<span class="string">"true"</span> <span class="attr">preload</span>=<span class="string">"auto"</span> <span class="attr">autoplay</span> <span class="attr">src</span>=<span class="string">"http://"</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>JS判断设备</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">function deviceType()&#123;</div><div class="line">	var ua = navigator.userAgent;</div><div class="line">	var agent = [&quot;Android&quot;, &quot;iPhone&quot;, &quot;SymbianOS&quot;, &quot;Windows Phone&quot;, &quot;iPad&quot;, &quot;iPod&quot;];</div><div class="line">	for(var i=0; i&lt;len,len = agent.length; i++)&#123;</div><div class="line">		if(ua.indexOf(agent[i])&gt;0)&#123;			</div><div class="line">			break;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">deviceType();</div><div class="line">window.addEventListener(&apos;resize&apos;, function()&#123;</div><div class="line">	deviceType();</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
</li>
<li><p>JS判断微信浏览器</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">function isWeixin()&#123;</div><div class="line">	var ua = navigator.userAgent.toLowerCase();</div><div class="line">	if(ua.match(/MicroMessenger/i)==&apos;micromessenger&apos;)&#123;</div><div class="line">		return true;</div><div class="line">	&#125;else&#123;</div><div class="line">		return false;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>android 2.3 bug</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">//1.@-webkit-keyframes 需要以0%开始100%结束，0%的百分号不能去掉</div><div class="line">//2.after和before伪类无法使用动画animation</div><div class="line">//3.border-radius不支持%单位，如要兼容，可以给radius设置一下较大的值</div><div class="line">//4.translate百分比的写法和scale在一起会导致失效，例如：</div><div class="line">-webkit-transform: translate(-50%,-50%) scale(-0.5, 1)</div></pre></td></tr></table></figure>
</li>
<li><p>android 4.x bug</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">//1.三星 Galaxy S4中自带浏览器不支持border-radius缩写</div><div class="line">//2.同时设置border-radius和背景色的时候，背景色会溢出到圆角以外部分</div><div class="line">//3.部分手机(如三星)，a链接支持鼠标:visited事件，也就是说链接访问后文字变为紫色</div><div class="line">//4.android无法同时播放多音频audio</div></pre></td></tr></table></figure>
</li>
<li><p>消除transition闪屏</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.css</span> &#123;</div><div class="line">	<span class="attribute">-webkit-transform-style</span>: preserve-<span class="number">3</span>d;</div><div class="line">	<span class="attribute">-webkit-backface-visibility</span>: hidden;</div><div class="line">	<span class="attribute">-webkit-perspective</span>: <span class="number">1000</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>开启硬件加速</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">//目前，像Chrome/Filefox/Safari/IE9+以及最新版本Opera都支持硬件加速，当检测到某个DOM元素应用了某些CSS规则时就会自动开启，从而解决页面闪白，保证动画流畅。</div><div class="line">.css &#123;</div><div class="line">	-webkit-transform: translate3d(0,0,0);</div><div class="line">	-moz-transform: translate3d(0,0,0);</div><div class="line">	-ms-transform: translate3d(0,0,0);</div><div class="line">	transform: translate3d(0,0,0);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>渲染优化</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">//1.禁止使用iframe（阻塞父文档onload事件）</div><div class="line">//2.禁止使用gif图片实现loading效果（降低CPU消耗，提升渲染性能）</div><div class="line">//使用CSS3代码代替JS动画；</div><div class="line">//开启GPU加速；</div><div class="line">//使用base64位编码图片(不小图而言，大图不建议使用)</div><div class="line">	// 对于一些小图标，可以使用base64位编码，以减少网络请求。但不建议大图使用，比较耗费CPU。小图标优势在于：</div><div class="line">	//1.减少HTTP请求；</div><div class="line">	//2.避免文件跨域；</div><div class="line">	//3.修改及时生效；</div></pre></td></tr></table></figure>
</li>
<li><p>腾讯方案</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> autoScale = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> ratio = <span class="number">320</span>/<span class="number">504</span>,   <span class="comment">//这是设计稿的宽高比（504是Iphone的高度去掉标题栏高度）</span></div><div class="line">        winW = <span class="built_in">document</span>.getElement.clientWidth,</div><div class="line">        winH = <span class="built_in">document</span>.getElement.clientHeight,</div><div class="line">        ratio2 = winW/winH,</div><div class="line">        scale;</div><div class="line">    <span class="keyword">if</span>(ratio&lt;ratio2)&#123;</div><div class="line">        scale = (winH/<span class="number">504</span>).toString().substring(<span class="number">0</span>, <span class="number">6</span>);</div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">        scale = (winW/<span class="number">320</span>).toString().substring(<span class="number">0</span>, <span class="number">6</span>);  </div><div class="line">    &#125;</div><div class="line">    <span class="keyword">var</span> cssText = <span class="string">'-webkit-transform: scale('</span>+scale+<span class="string">');-webkit-transform-origin: top; opacity:1;'</span>  </div><div class="line">    $(<span class="string">'.wrap'</span>).attr(<span class="string">'style'</span>, cssText);</div><div class="line">&#125;</div><div class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">if</span>(<span class="built_in">document</span>.documentElement.clientWidth/<span class="built_in">document</span>.documentElement.clientHeight !== <span class="number">320</span>/<span class="number">504</span>)&#123;</div><div class="line">        autoScale();</div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">        $(<span class="string">'.page'</span>).css(&#123;<span class="string">'opacity'</span>: <span class="number">1</span>&#125;);</div><div class="line">    &#125;</div><div class="line">&#125;, <span class="number">300</span>)  <span class="comment">//添加一定时长以确保宽高获取正确</span></div><div class="line"><span class="built_in">window</span>.addEventListener(<span class="string">'onorientationchange'</span> <span class="keyword">in</span> <span class="built_in">window</span>?<span class="string">'orientationchange'</span>:<span class="string">'resize'</span>, autoScale, <span class="literal">false</span>)&#123;</div><div class="line">        detectOrientatioin();</div><div class="line">&#125;   <span class="comment">//切换横竖屏</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">detectOrientatioin</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">if</span>(<span class="built_in">window</span>.orientation==<span class="number">180</span> || <span class="built_in">window</span>.orientation==<span class="number">0</span>)&#123;</div><div class="line">        <span class="comment">//竖屏</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(<span class="built_in">window</span>.orientation==<span class="number">90</span> || <span class="built_in">window</span>.orientation==<span class="number">-90</span>)&#123;</div><div class="line">        <span class="comment">//横屏</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="常用的移动端框架"><a href="#常用的移动端框架" class="headerlink" title="常用的移动端框架"></a>常用的移动端框架</h4><p>zepto.js</p>
<pre><code>- [官网](http://zeptojs.com/)
- [中文网](http://www.css88.com/doc/zeptojs_api/)
- [浏览器检测](https://github.com/madrobby/zepto/blob/master/src/detect.js)
- [tap事件](https://github.com/madrobby/zepto/blob/master/src/touch.js)
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://www.qdfuns.com/notes/19075/63b3c42852852d29ff7197c53183f0ee.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;转载自http://www.qdfuns.com
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>写前端页面时的注意事项</title>
    <link href="http://yoursite.com/2017/12/20/%E5%86%99%E5%89%8D%E7%AB%AF%E9%A1%B5%E9%9D%A2%E6%97%B6%E7%9A%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/"/>
    <id>http://yoursite.com/2017/12/20/写前端页面时的注意事项/</id>
    <published>2017-12-20T09:32:21.000Z</published>
    <updated>2018-05-04T06:42:20.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="注意兼容性要求"><a href="#注意兼容性要求" class="headerlink" title="注意兼容性要求"></a>注意兼容性要求</h3><p>无论你是甲方还是乙方，希望你在开始切页面之前，问清楚，这个网站是否要兼容性要求，要不你做的事兼容到了IE10，结果需求是要求到IE8，你是改不改。当然，如果你牛，你可以不改。</p>
<h3 id="确认是自适应还是PC端"><a href="#确认是自适应还是PC端" class="headerlink" title="确认是自适应还是PC端"></a>确认是自适应还是PC端</h3><p>随着科技产品的流行，人们在做网站是的要求也越来越高，不再只要求单一的手机端页面或是PC端页面，有可能是两者兼容，所以在开始之前，我们需要去确认清楚。反正我只不喜欢修改。</p>
<h3 id="代码简洁明了"><a href="#代码简洁明了" class="headerlink" title="代码简洁明了"></a>代码简洁明了</h3><p>简洁的代码，不仅对于自己来说容易检查复用,对于后台开发人员来说嵌套页面也很方便。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;注意兼容性要求&quot;&gt;&lt;a href=&quot;#注意兼容性要求&quot; class=&quot;headerlink&quot; title=&quot;注意兼容性要求&quot;&gt;&lt;/a&gt;注意兼容性要求&lt;/h3&gt;&lt;p&gt;无论你是甲方还是乙方，希望你在开始切页面之前，问清楚，这个网站是否要兼容性要求，要不你做的事兼容到了
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>开发过程中遇到的小问题</title>
    <link href="http://yoursite.com/2017/12/15/%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E5%B0%8F%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2017/12/15/开发过程中遇到的小问题/</id>
    <published>2017-12-15T09:19:02.000Z</published>
    <updated>2018-05-04T07:42:16.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1移动端输入六位密码-光标位置不对"><a href="#1移动端输入六位密码-光标位置不对" class="headerlink" title="1移动端输入六位密码 光标位置不对"></a>1移动端输入六位密码 光标位置不对</h3><p>解决办法，把它移到看不见的地方<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">input&#123;</div><div class="line">       text-indent: -999em;</div><div class="line">       margin-left: -100%;</div><div class="line">       width: 200%!important;</div><div class="line">  &#125;</div></pre></td></tr></table></figure></p>
<h3 id="2-textarea-文本域"><a href="#2-textarea-文本域" class="headerlink" title="2 textarea 文本域"></a>2 textarea 文本域</h3><pre><code><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">resize: none; //禁止放大</div><div class="line">overflow-y: hidden;  //进度条</div></pre></td></tr></table></figure>
</code></pre><h3 id="3-打电话-发短信"><a href="#3-打电话-发短信" class="headerlink" title="3 打电话,发短信"></a>3 打电话,发短信</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;a href=<span class="string">"tel:0755-10086"</span>&gt;打电话给:0755-10086&lt;/a&gt;</div><div class="line">&lt;a href=<span class="string">"sms:10086"</span>&gt;发短信给: 10086&lt;/a&gt;</div></pre></td></tr></table></figure>
<h3 id="4-可输入的div"><a href="#4-可输入的div" class="headerlink" title="4 可输入的div"></a>4 可输入的div</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">    &lt;head&gt;</div><div class="line">        &lt;meta http-equiv=<span class="string">"content-type"</span> content=<span class="string">"text/html; charset=utf-8"</span> /&gt;</div><div class="line">        &lt;title&gt;&lt;/title&gt;</div><div class="line">        &lt;style <span class="built_in">type</span>=<span class="string">"text/css"</span>&gt;</div><div class="line">            div&#123;</div><div class="line">                width:300px;</div><div class="line">                border:1px solid <span class="comment">#666;</span></div><div class="line">                font-size:20px;</div><div class="line">                color:blue;</div><div class="line">                line-height:20px;</div><div class="line">                outline: none;</div><div class="line">               padding: 10px;</div><div class="line">            &#125;</div><div class="line">            div:empty:before&#123;</div><div class="line">               content: attr(placeholder);</div><div class="line">               color:<span class="comment">#ccc;</span></div><div class="line">            &#125;</div><div class="line">            div:focus:before&#123;</div><div class="line">               content:none;</div><div class="line">            &#125;</div><div class="line">        &lt;/style&gt;</div><div class="line">    &lt;/head&gt;</div><div class="line">    &lt;body&gt;</div><div class="line">        &lt;div contenteditable=<span class="string">"plaintext-only"</span> placeholder=<span class="string">"请输入内容"</span>&gt;&lt;/div&gt;</div><div class="line">    &lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
<h3 id="5-重定向"><a href="#5-重定向" class="headerlink" title="5 重定向"></a>5 重定向</h3><p>重定向是网页制作中的一个知识，几个例子跟你说明，假设你现在所处的位置是一个论坛的登录页面，你填写了帐号，密码，点击登陆，如果你的帐号密码正确，就自动跳转到论坛的首页，不正确就返回登录页；这里的自动跳转，就是重定向的意思。或者可以说，重定向就是，在网页上设置一个约束条件，条件满足，就自动转入到其它网页、网址。<br>    window.location.href = ‘goods_management.html?tab=audit’;</p>
<h3 id="6-input文本框输入数字时，小数点后面只保留2位"><a href="#6-input文本框输入数字时，小数点后面只保留2位" class="headerlink" title="6 input文本框输入数字时，小数点后面只保留2位"></a>6 input文本框输入数字时，小数点后面只保留2位</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#goodsPrice'</span>).blur(<span class="function"><span class="title">function</span></span>() &#123;</div><div class="line">    var money = $(this).val() - 0.0;</div><div class="line">    $(this).val(money.toFixed(2));</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="7-刷新当前页面"><a href="#7-刷新当前页面" class="headerlink" title="7 刷新当前页面"></a>7 刷新当前页面</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">window.location.reload()：    //刷新当前页面</div><div class="line">&lt;meta http-equiv=<span class="string">"refresh"</span> content=<span class="string">"3600"</span>&gt;   //1小时刷新一次</div></pre></td></tr></table></figure>
<h3 id="8-手机端首屏遇到的fixed问题（用手机浏览器浏览，我用的是QQ浏览器）"><a href="#8-手机端首屏遇到的fixed问题（用手机浏览器浏览，我用的是QQ浏览器）" class="headerlink" title="8 手机端首屏遇到的fixed问题（用手机浏览器浏览，我用的是QQ浏览器）"></a>8 手机端首屏遇到的fixed问题（用手机浏览器浏览，我用的是QQ浏览器）</h3><p>最近做项目时遇到一个小问题，手机端首屏banner图fixed固定，当页面向上滑动时，banner图高度变了，由于banner图是用背景图做的，所以给人的感觉是banner图跳了一下，然后banner图显示全了，而原先是显示不全的。</p>
<p>滑动前(左图)后(右图)：</p>
<center class="half"><img src="/2017/12/15/开发过程中遇到的小问题/微信图片_20180504153043.jpg" width="48%" style="display:inline-block;margin-right:4%;"><img src="/2017/12/15/开发过程中遇到的小问题/微信图片_20180504153117.jpg" width="48%" style="display:inline-block;"></center>

<p>经过检查，发现是由于没有给固定高度，而是用100%的原因。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1移动端输入六位密码-光标位置不对&quot;&gt;&lt;a href=&quot;#1移动端输入六位密码-光标位置不对&quot; class=&quot;headerlink&quot; title=&quot;1移动端输入六位密码 光标位置不对&quot;&gt;&lt;/a&gt;1移动端输入六位密码 光标位置不对&lt;/h3&gt;&lt;p&gt;解决办法，把它移到看
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>兼容IE8需要考虑到的问题</title>
    <link href="http://yoursite.com/2017/12/15/%E5%85%BC%E5%AE%B9IE8%E9%9C%80%E8%A6%81%E8%80%83%E8%99%91%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2017/12/15/兼容IE8需要考虑到的问题/</id>
    <published>2017-12-15T03:36:52.000Z</published>
    <updated>2017-12-15T07:36:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>在写页面时，其实最简单的是兼容到IE10及以上，这样的情况下，无论是PC、手机或者两者都兼容的响应式页面，基本不需要考虑兼容问题，处理起来容易多了。但是，现实和理想是有很大的差别的，随意我们需要考虑到IE8甚至更低的问题。</p>
<h2 id="IE9（先来个简单的）"><a href="#IE9（先来个简单的）" class="headerlink" title="IE9（先来个简单的）"></a>IE9（先来个简单的）</h2><p>IE9比较好说，因为css3，html5这些新的标签，属性，是支持IE9的，所以我们不需要为这些操心，只是对于我们用的一些框架留心一点。<br>比如说轮播框架，当然有的人可能会说轮播用什么框架啊，自己写一个就好，很简单的。确实，不是很难，但是相对于一些成熟的框架来说，就显得比较单薄了。有时候用一些框架会比较更加简单，效果也会会更好。话说回来，就是轮播插件吧，swiper大家应该熟悉吧，手机，PC都可以用，用起来也挺简单的，但是，对于swiper3来说，他兼容到IE10，IE9用起来就不是很好用，所以使用的同学注意了，如果要兼容的话，可以用swiper2，它是准们针对PC的，兼容性挺好的。</p>
<h2 id="IE8"><a href="#IE8" class="headerlink" title="IE8"></a>IE8</h2><p>IE8需要考虑的东西就相对来说就比较多了。</p>
<h3 id="背景图"><a href="#背景图" class="headerlink" title="背景图"></a>背景图</h3><p>在切页面时，我们经常会用到background以及background-size,background-position等等，IE9及以上可以完美的兼容，但是到了IE8就悲催了，它可以使用background，可是对于background-size,background-position这些它就不认识了，所以我们得想办法解决，解决办法有两种：<br>一、不要用背景图，直接使用img就OK了<br>二、使用其他css<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">background-repeat:no-repeat\9;</div><div class="line">background-image:none\9;</div><div class="line">filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=<span class="string">'img/banner.png'</span>, sizingMethod=<span class="string">'scale'</span>)\9;</div></pre></td></tr></table></figure></p>
<p>这样的话可以让背景图全部显示，记住是‘全都显示’，顾名思义就是大小不合适的话，就会变形了。</p>
<h3 id="半透明背景色"><a href="#半透明背景色" class="headerlink" title="半透明背景色"></a>半透明背景色</h3><pre><code><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">background-color:<span class="comment">#000000;</span></div><div class="line">filter:Alpha(opacity=70);</div><div class="line">position:static; /* IE6、7、8只能设置position:static(默认属性) ，否则会导致子元素继承Alpha值 */</div><div class="line">*zoom:1; /* 激活IE6、7的haslayout属性，让它读懂Alpha */</div><div class="line">background-color: rgba(0,0,0,.7);</div></pre></td></tr></table></figure>
</code></pre><h3 id="html5语义化标签的兼容"><a href="#html5语义化标签的兼容" class="headerlink" title="html5语义化标签的兼容"></a>html5语义化标签的兼容</h3><pre><code>这个就比较简单了，直接引入一个js文件就解决了：html5shiv.js
</code></pre><h2 id="IE7"><a href="#IE7" class="headerlink" title="IE7"></a>IE7</h2><h3 id="伪类兼容"><a href="#伪类兼容" class="headerlink" title="伪类兼容"></a>伪类兼容</h3><pre><code>伪类挺好用的，但是如果我用伪类写了一个横线，到IE7是不支持的，在网上查，说到IE6/7的时候伪类的写法和IE8是不同的，他们分别是这样的
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">p:after,p after</div></pre></td></tr></table></figure>

但是我发现还是不能用，暂时没有办法。
</code></pre><h3 id="盒模型"><a href="#盒模型" class="headerlink" title="盒模型"></a>盒模型</h3><pre><code>大家用盒模型box-sizing: border-box;的时候是不是很爽啊，但是某一天客户说他们的产品要兼容到IE低级版本，在哪一刻是不是很崩溃啊，反正我是崩溃了，兼容到低级版本，怎么不早说啊！！！！但是胳膊拧不过大腿，我只能悲催的去改改改，各种的宽度啊，综合padding，margin重新计算。哭！！！
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在写页面时，其实最简单的是兼容到IE10及以上，这样的情况下，无论是PC、手机或者两者都兼容的响应式页面，基本不需要考虑兼容问题，处理起来容易多了。但是，现实和理想是有很大的差别的，随意我们需要考虑到IE8甚至更低的问题。&lt;/p&gt;
&lt;h2 id=&quot;IE9（先来个简单的）&quot;&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ES6转码步骤</title>
    <link href="http://yoursite.com/2017/07/20/ES6%E8%BD%AC%E7%A0%81%E6%AD%A5%E9%AA%A4/"/>
    <id>http://yoursite.com/2017/07/20/ES6转码步骤/</id>
    <published>2017-07-20T07:22:03.000Z</published>
    <updated>2017-07-20T07:40:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>能够实现 ES6 到 ES5 的代码转换多亏了 Babel (以前叫 6to5) 以及 Traceur 之类的项目。这些转换器 (更准确地说是源代码到源代码的编译器) 可以把你写的符合 ECMAScript 6 标准的代码完美地转换为 ECMAScript 5 标准的代码，并且可以确保良好地运行在所有主流 JavaScript 引擎中。</p>
<p>我们这里目前在使用 Babel，主要是因为它对 ES6 的支持程度比其它同类更高，而且 Babel 拥有完善的文档和一个很棒的<a href="https://babeljs.io/repl/" target="_blank" rel="external">在线交互式编程环境</a>。</p>
<p>在转码之前，我们需要先安装环境。node.js和NPM的安装就不写了，没有安装的自己看官网安装，咱们来直接安装ES6转码工具。</p>
<h2 id="安装-Babel"><a href="#安装-Babel" class="headerlink" title="安装 Babel"></a>安装 Babel</h2><p><code>sh
npm install -g babel</code></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;能够实现 ES6 到 ES5 的代码转换多亏了 Babel (以前叫 6to5) 以及 Traceur 之类的项目。这些转换器 (更准确地说是源代码到源代码的编译器) 可以把你写的符合 ECMAScript 6 标准的代码完美地转换为 ECMAScript 5 标准的代码，
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>前端知识体系</title>
    <link href="http://yoursite.com/2017/07/18/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/"/>
    <id>http://yoursite.com/2017/07/18/前端知识体系/</id>
    <published>2017-07-18T10:13:59.000Z</published>
    <updated>2017-07-18T10:16:26.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-布局框架："><a href="#1-布局框架：" class="headerlink" title="1. 布局框架："></a>1. 布局框架：</h3><p>Bootstrap: <a href="http://getbootstrap.com/" target="_blank" rel="external">http://getbootstrap.com/</a></p>
<p>Foundation: <a href="http://foundation.zurb.com/" target="_blank" rel="external">http://foundation.zurb.com/</a></p>
<p>Uikit: <a href="http://www.getuikit.com/" target="_blank" rel="external">http://www.getuikit.com/</a></p>
<p>Web Components:<a href="http://css-tricks.com/modular-future-web-components//" target="_blank" rel="external">http://css-tricks.com/modular-future-web-components//</a></p>
<h3 id="2-构建工具及包管理器："><a href="#2-构建工具及包管理器：" class="headerlink" title="2. 构建工具及包管理器："></a>2. 构建工具及包管理器：</h3><p>Grunt: <a href="http://gruntjs.com/" target="_blank" rel="external">http://gruntjs.com/</a></p>
<p>Yeoman: <a href="http://yeoman.io/" target="_blank" rel="external">http://yeoman.io/</a></p>
<p>Bower: <a href="http://bower.io/" target="_blank" rel="external">http://bower.io/</a></p>
<p>NPM: <a href="https://www.npmjs.org/" target="_blank" rel="external">https://www.npmjs.org/</a></p>
<h3 id="3-代码优化："><a href="#3-代码优化：" class="headerlink" title="3. 代码优化："></a>3. 代码优化：</h3><p>Google Closure Compiler:</p>
<p>CSS Lint: <a href="http://csslint.net/" target="_blank" rel="external">http://csslint.net/</a></p>
<p>JSHint: <a href="http://www.jshint.com/" target="_blank" rel="external">http://www.jshint.com/</a></p>
<p>JSLint: <a href="http://www.jslint.com/" target="_blank" rel="external">http://www.jslint.com/</a></p>
<h3 id="4-CSS预处理器"><a href="#4-CSS预处理器" class="headerlink" title="4. CSS预处理器"></a>4. CSS预处理器</h3><p>Less: <a href="http://lesscss.org/" target="_blank" rel="external">http://lesscss.org/</a></p>
<p>Sass: <a href="http://sass-lang.com/" target="_blank" rel="external">http://sass-lang.com/</a></p>
<h3 id="5-调试工具："><a href="#5-调试工具：" class="headerlink" title="5. 调试工具："></a>5. 调试工具：</h3><p>Chrome：<a href="https://developers.google.com/chrome-developer-tools/" target="_blank" rel="external">https://developers.google.com/chrome-developer-tools/</a></p>
<p>Firebug: <a href="https://getfirebug.com/" target="_blank" rel="external">https://getfirebug.com/</a></p>
<p>HTTPWatch: <a href="http://www.httpwatch.com/" target="_blank" rel="external">http://www.httpwatch.com/</a></p>
<p>Fiddler: <a href="http://www.telerik.com/fiddler" target="_blank" rel="external">http://www.telerik.com/fiddler</a></p>
<p>IE Developer Toolbar:</p>
<p>Weinre: <a href="http://people.apache.org/~pmuellr/weinre/docs/latest/Home.html" target="_blank" rel="external">http://people.apache.org/~pmuellr/weinre/docs/latest/Home.html</a></p>
<h3 id="6-文档工具："><a href="#6-文档工具：" class="headerlink" title="6. 文档工具："></a>6. 文档工具：</h3><p>JSDoc: <a href="https://github.com/jsdoc3/jsdoc" target="_blank" rel="external">https://github.com/jsdoc3/jsdoc</a></p>
<p>Jekyll: <a href="http://jekyllrb.com/" target="_blank" rel="external">http://jekyllrb.com/</a></p>
<h3 id="7-IDE-文本编辑器"><a href="#7-IDE-文本编辑器" class="headerlink" title="7. IDE/文本编辑器"></a>7. IDE/文本编辑器</h3><p>WebStorm: <a href="http://www.jetbrains.com/webstorm/" target="_blank" rel="external">http://www.jetbrains.com/webstorm/</a></p>
<h3 id="8-移动端-手势事件库："><a href="#8-移动端-手势事件库：" class="headerlink" title="8. 移动端 手势事件库："></a>8. 移动端 手势事件库：</h3><p>GMU: <a href="http://gmu.baidu.com/" target="_blank" rel="external">http://gmu.baidu.com/</a></p>
<p>Hammer.js:&lt; <a href="http://eightmedia.github.io/hammer.js/&gt;" target="_blank" rel="external">http://eightmedia.github.io/hammer.js/&gt;</a></p>
<p>QuoJS: <a href="http://quojs.tapquo.com/" target="_blank" rel="external">http://quojs.tapquo.com/</a></p>
<p>Zepto: <a href="http://zeptojs.com/" target="_blank" rel="external">http://zeptojs.com/</a></p>
<p>Swipe: <a href="http://swipejs.com/" target="_blank" rel="external">http://swipejs.com/</a></p>
<p>jQuery Mobile: <a href="http://jquerymobile.com/" target="_blank" rel="external">http://jquerymobile.com/</a></p>
<p>KendoUI:<a href="http://www.telerik.com/kendo-ui" target="_blank" rel="external">http://www.telerik.com/kendo-ui</a></p>
<p>Goratchet:<a href="http://goratchet.com/" target="_blank" rel="external">http://goratchet.com/</a></p>
<h3 id="9-思维导图"><a href="#9-思维导图" class="headerlink" title="9. 思维导图"></a>9. 思维导图</h3><p>XMind:<a href="http://www.xmind.net/" target="_blank" rel="external">http://www.xmind.net/</a></p>
<h3 id="10-模块加载器："><a href="#10-模块加载器：" class="headerlink" title="10.模块加载器："></a>10.模块加载器：</h3><p>ESL:&lt; <a href="https://github.com/ecomfe/esl&gt;" target="_blank" rel="external">https://github.com/ecomfe/esl&gt;</a></p>
<p>RequireJS: <a href="http://requirejs.org/" target="_blank" rel="external">http://requirejs.org/</a></p>
<p>SeaJS:<a href="http://seajs.org/docs/" target="_blank" rel="external">http://seajs.org/docs/</a></p>
<h3 id="11-项目管理"><a href="#11-项目管理" class="headerlink" title="11. 项目管理:"></a>11. 项目管理:</h3><p>Github: <a href="https://github.com/" target="_blank" rel="external">https://github.com/</a></p>
<p>GitLab: <a href="https://about.gitlab.com/" target="_blank" rel="external">https://about.gitlab.com/</a></p>
<p>Redmine: <a href="http://www.redmine.org/" target="_blank" rel="external">http://www.redmine.org/</a></p>
<h3 id="12-原型设计"><a href="#12-原型设计" class="headerlink" title="12. 原型设计:"></a>12. 原型设计:</h3><p>Axure RP: <a href="http://www.axure.com/" target="_blank" rel="external">http://www.axure.com/</a></p>
<h3 id="13-富互联网应用框架"><a href="#13-富互联网应用框架" class="headerlink" title="13. 富互联网应用框架"></a>13. 富互联网应用框架</h3><p>AngularJs: <a href="http://www.angularjs.org" target="_blank" rel="external">http://www.angularjs.org</a></p>
<p>Backbone: <a href="http://backbonejs.org/" target="_blank" rel="external">http://backbonejs.org/</a></p>
<p>AmpersandJS<a href="http://ampersandjs.com//" target="_blank" rel="external">http://ampersandjs.com//</a></p>
<p>Knockout: <a href="http://knockoutjs.com/" target="_blank" rel="external">http://knockoutjs.com/</a></p>
<p>Underscore: <a href="http://underscorejs.org/" target="_blank" rel="external">http://underscorejs.org/</a></p>
<h3 id="14-模板引擎"><a href="#14-模板引擎" class="headerlink" title="14. 模板引擎"></a>14. 模板引擎</h3><p>EJS: <a href="http://www.embeddedjs.com/" target="_blank" rel="external">http://www.embeddedjs.com/</a></p>
<p>Handlebars: <a href="http://handlebarsjs.com/" target="_blank" rel="external">http://handlebarsjs.com/</a></p>
<p>Jade: <a href="http://jade-lang.com/" target="_blank" rel="external">http://jade-lang.com/</a></p>
<p>Velocity: <a href="http://velocity.apache.org/" target="_blank" rel="external">http://velocity.apache.org/</a></p>
<h3 id="15-测试框架"><a href="#15-测试框架" class="headerlink" title="15. 测试框架"></a>15. 测试框架</h3><p>Jasmine: <a href="http://pivotal.github.io/jasmine/" target="_blank" rel="external">http://pivotal.github.io/jasmine/</a></p>
<p>QUnit: <a href="http://qunitjs.com/" target="_blank" rel="external">http://qunitjs.com/</a></p>
<p>mocha: <a href="http://visionmedia.github.io/mocha/" target="_blank" rel="external">http://visionmedia.github.io/mocha/</a></p>
<h3 id="16-版本控制"><a href="#16-版本控制" class="headerlink" title="16. 版本控制"></a>16. 版本控制</h3><p>Git: <a href="http://git-scm.com/" target="_blank" rel="external">http://git-scm.com/</a></p>
<p>Subversion: <a href="http://subversion.apache.org/" target="_blank" rel="external">http://subversion.apache.org/</a></p>
<p>Mercurial(Hg): <a href="http://mercurial.selenic.com/" target="_blank" rel="external">http://mercurial.selenic.com/</a></p>
<h3 id="17-WEB框架-服务器"><a href="#17-WEB框架-服务器" class="headerlink" title="17. WEB框架/服务器"></a>17. WEB框架/服务器</h3><p>Node: <a href="http://nodejs.org/" target="_blank" rel="external">http://nodejs.org/</a></p>
<p>Express: <a href="http://expressjs.com/" target="_blank" rel="external">http://expressjs.com/</a></p>
<p>Apache: <a href="http://httpd.apache.org/" target="_blank" rel="external">http://httpd.apache.org/</a></p>
<p>Nginx: <a href="http://nginx.org/" target="_blank" rel="external">http://nginx.org/</a></p>
<h3 id="18-CommonJS"><a href="#18-CommonJS" class="headerlink" title="18. CommonJS"></a>18. CommonJS</h3><p>Component: <a href="http://component.io/" target="_blank" rel="external">http://component.io/</a></p>
<h3 id="19-WEB安全"><a href="#19-WEB安全" class="headerlink" title="19. WEB安全"></a>19. WEB安全</h3><p>XSS(跨站脚本攻击):</p>
<p>CSRF(跨站点伪造请求攻击):</p>
<p>跨iframe攻击:</p>
<p>Clickjacking安全漏洞:</p>
<h3 id="20-代码规范"><a href="#20-代码规范" class="headerlink" title="20. 代码规范"></a>20. 代码规范</h3><p>Code Guide: <a href="http://alloyteam.github.io/code-guide/" target="_blank" rel="external">http://alloyteam.github.io/code-guide/</a></p>
<p>编写可维护的CSS: <a href="http://segmentfault.com/a/1190000000388784/" target="_blank" rel="external">http://segmentfault.com/a/1190000000388784/</a></p>
<p>GJS编码规范指南: <a href="http://alloyteam.github.io/JX/doc/specification/google-javascript.xml" target="_blank" rel="external">http://alloyteam.github.io/JX/doc/specification/google-javascript.xml</a></p>
<p>jQueryJS规范: <a href="http://contribute.jquery.org/style-guide/js/" target="_blank" rel="external">http://contribute.jquery.org/style-guide/js/</a></p>
<h3 id="21-HTML模块化"><a href="#21-HTML模块化" class="headerlink" title="21. HTML模块化"></a>21. HTML模块化</h3><p>html5boilerplate: <a href="http://html5boilerplate.com/" target="_blank" rel="external">http://html5boilerplate.com/</a></p>
<h3 id="22-CSS模块化"><a href="#22-CSS模块化" class="headerlink" title="22. CSS模块化"></a>22. CSS模块化</h3><p>Normalize.css: <a href="http://necolas.github.io/normalize.css/" target="_blank" rel="external">http://necolas.github.io/normalize.css/</a></p>
<p>LESS:<a href="http://www.lesscss.net/" target="_blank" rel="external">http://www.lesscss.net/</a></p>
<p>OOCSS:<a href="http://www.oocss.cc/" target="_blank" rel="external">http://www.oocss.cc/</a> <a href="http://oocss.org/" target="_blank" rel="external">http://oocss.org/</a></p>
<p>CssReset:<a href="http://www.cssreset.com/" target="_blank" rel="external">http://www.cssreset.com/</a></p>
<h3 id="23-HTML5-Canvas"><a href="#23-HTML5-Canvas" class="headerlink" title="23. HTML5 Canvas"></a>23. HTML5 Canvas</h3><p>D3:<a href="http://d3js.org/" target="_blank" rel="external">http://d3js.org/</a></p>
<p>KINETIC:<a href="http://kineticjs.com/" target="_blank" rel="external">http://kineticjs.com/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-布局框架：&quot;&gt;&lt;a href=&quot;#1-布局框架：&quot; class=&quot;headerlink&quot; title=&quot;1. 布局框架：&quot;&gt;&lt;/a&gt;1. 布局框架：&lt;/h3&gt;&lt;p&gt;Bootstrap: &lt;a href=&quot;http://getbootstrap.com/&quot; ta
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Browsersync-省时的浏览器同步测试工具</title>
    <link href="http://yoursite.com/2017/07/10/Browsersync-%E7%9C%81%E6%97%B6%E7%9A%84%E6%B5%8F%E8%A7%88%E5%99%A8%E5%90%8C%E6%AD%A5%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    <id>http://yoursite.com/2017/07/10/Browsersync-省时的浏览器同步测试工具/</id>
    <published>2017-07-10T09:33:50.000Z</published>
    <updated>2017-07-10T10:09:44.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="省时的浏览器同步测试工具"><a href="#省时的浏览器同步测试工具" class="headerlink" title="省时的浏览器同步测试工具"></a>省时的浏览器同步测试工具</h1><p>Browsersync能让浏览器实时、快速响应您的文件更改（html、js、css、sass、less等）并自动刷新页面。更重要的是 Browsersync可以同时在PC、平板、手机等设备下进项调试。您可以想象一下：“假设您的桌子上有pc、ipad、iphone、android等设备，同时打开了您需要调试的页面，当您使用browsersync后，您的任何一次代码保存，以上的设备都会同时显示您的改动”。无论您是前端还是后端工程师，使用它将提高您30%的工作效率。<br><img src="/2017/07/10/Browsersync-省时的浏览器同步测试工具/sync-demo.gif" alt="效果图"><br>有了它，您不用在多个浏览器、多个设备间来回切换，频繁的刷新页面。更神奇的是您在一个浏览器中滚动页面、点击等行为也会同步到其他浏览器和设备中，这一切还可以通过可视化界面来控制。</p>
<h2 id="5分钟快速入门。"><a href="#5分钟快速入门。" class="headerlink" title="5分钟快速入门。"></a>5分钟快速入门。</h2><h3 id="1-安装-Node-js"><a href="#1-安装-Node-js" class="headerlink" title="1. 安装 Node.js"></a>1. 安装 Node.js</h3><blockquote>
<p>BrowserSync是基于Node.js的, 是一个Node模块， 如果您想要快速使用它，也许您需要先安装一下Node.js </p>
</blockquote>
<h3 id="2-安装-BrowserSync"><a href="#2-安装-BrowserSync" class="headerlink" title="2. 安装 BrowserSync"></a>2. 安装 BrowserSync</h3><blockquote>
<p>您可以选择从Node.js的包管理（NPM）库中 安装BrowserSync。打开一个终端窗口，运行以下命令：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g browser-sync</div></pre></td></tr></table></figure></p>
</blockquote>
<p>您告诉包管理器下载BrowserSync文件，并在全局下安装它们，您可以在所有项目(任何目录)中使用。<br>当然您也可以结合gulpjs或gruntjs构建工具来使用，在您需要构建的项目里运行下面的命令:<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install --save-dev browser-sync</div></pre></td></tr></table></figure></p>
<h3 id="3-启动-BrowserSync"><a href="#3-启动-BrowserSync" class="headerlink" title="3. 启动 BrowserSync"></a>3. 启动 BrowserSync</h3><blockquote>
<p>一个基本用途是，如果您只希望在对某个css文件进行修改后会同步到浏览器里。那么您只需要运行命令行工具，进入到该项目（目录）下，并运行相应的命令：</p>
<h4 id="静态网站"><a href="#静态网站" class="headerlink" title="静态网站"></a>静态网站</h4><p>如果您想要监听.css文件, 您需要使用服务器模式。 BrowserSync 将启动一个小型服务器，并提供一个URL来查看您的网站。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">// --files 路径是相对于运行该命令的项目（目录） </div><div class="line">browser-sync start --server --files <span class="string">"css/*.css"</span></div></pre></td></tr></table></figure></p>
</blockquote>
<p>如果您需要监听多个类型的文件，您只需要用逗号隔开。例如我们再加入一个.html文件<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">// --files 路径是相对于运行该命令的项目（目录） </div><div class="line">browser-sync start --server --files <span class="string">"css/*.css, *.html"</span></div><div class="line">// 如果你的文件层级比较深，您可以考虑使用 **（表示任意目录）匹配，任意目录下任意.css 或 .html文件。 </div><div class="line">browser-sync start --server --files <span class="string">"**/*.css, **/*.html"</span></div></pre></td></tr></table></figure></p>
<p>我们做了一个静态例子的示范，您可以下载示例包，文件您可以解压任何盘符的任何目录下，不能是中文路径。打开您的命令行工具，进入到BrowsersyncExample目录下，运行以下其中一条命令。Browsersync将创建一个本地服务器并自动打开你的浏览器后访问<a href="http://localhost:3000地址，这一切都会在命令行工具里显示。你也可以查看[Browsersync静态示例视频](http://www.browsersync.cn/example/video/browsersync1.mp4" target="_blank" rel="external">http://localhost:3000地址，这一切都会在命令行工具里显示。你也可以查看[Browsersync静态示例视频](http://www.browsersync.cn/example/video/browsersync1.mp4</a>)<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">// 监听css文件 </div><div class="line">browser-sync start --server --files <span class="string">"css/*.css"</span></div><div class="line">// 监听css和html文件 </div><div class="line">browser-sync start --server --files <span class="string">"css/*.css, *.html"</span></div></pre></td></tr></table></figure></p>
<h4 id="动态网站"><a href="#动态网站" class="headerlink" title="动态网站"></a>动态网站</h4><blockquote>
<p>如果您已经有其他本地服务器环境PHP或类似的，您需要使用代理模式。 BrowserSync将通过代理URL(localhost:3000)来查看您的网站。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">// 主机名可以是ip或域名</div><div class="line">browser-sync start --proxy <span class="string">"主机名"</span> <span class="string">"css/*.css"</span></div></pre></td></tr></table></figure></p>
</blockquote>
<p>在本地创建了一个PHP服务器环境，并通过绑定Browsersync.cn来访问本地服务器，使用以下命令方式，Browsersync将提供一个新的地址localhost:3000来访问Browsersync.cn，并监听其css目录下的所有css文件。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">browser-sync start --proxy <span class="string">"Browsersync.cn"</span> <span class="string">"css/*.css"</span></div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;省时的浏览器同步测试工具&quot;&gt;&lt;a href=&quot;#省时的浏览器同步测试工具&quot; class=&quot;headerlink&quot; title=&quot;省时的浏览器同步测试工具&quot;&gt;&lt;/a&gt;省时的浏览器同步测试工具&lt;/h1&gt;&lt;p&gt;Browsersync能让浏览器实时、快速响应您的文件更改（
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>代码路上遇到的兼容性问题</title>
    <link href="http://yoursite.com/2017/07/05/%E4%BB%A3%E7%A0%81%E8%B7%AF%E4%B8%8A%E9%81%87%E5%88%B0%E7%9A%84%E5%85%BC%E5%AE%B9%E6%80%A7%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2017/07/05/代码路上遇到的兼容性问题/</id>
    <published>2017-07-05T09:32:42.000Z</published>
    <updated>2017-07-05T09:55:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>兼容问题估计是所有IT人员的一个眼中钉，它总是无声无息的出现，我们不能屏蔽它，只能尽力避免，当然避免的前提是我们对它有所了解。<br>对于兼容问题我知道的也不是很多，只能有一个写一个，总会了解的越来越多，离它越来越远。</p>
<h3 id="IE浏览器下image边框问题"><a href="#IE浏览器下image边框问题" class="headerlink" title="IE浏览器下image边框问题"></a>IE浏览器下image边框问题</h3><p>调过IE的都应该知道，在IE浏览器下，image会出现边框，当然这个是很好解决的<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">image&#123;border: none;&#125;</div></pre></td></tr></table></figure></p>
<h3 id="不同浏览器的标签默认的外补丁和内补丁不同"><a href="#不同浏览器的标签默认的外补丁和内补丁不同" class="headerlink" title="不同浏览器的标签默认的外补丁和内补丁不同"></a>不同浏览器的标签默认的外补丁和内补丁不同</h3><p>随便写几个标签，不加样式控制的情况下，各自的margin 和padding差异较大。碰到频率:100%，这个也是很容易解决的<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">*&#123;margin:0;padding:0;&#125;</div></pre></td></tr></table></figure></p>
<p>这个是最常见的也是最易解决的一个浏览器兼容性问题，几乎所有的css文件开头都会用通配符*来设置各个标签的内外补丁是0。</p>
<h3 id="块属性标签float后，又有横行的margin情况下，在ie6显示margin比设置的大"><a href="#块属性标签float后，又有横行的margin情况下，在ie6显示margin比设置的大" class="headerlink" title="块属性标签float后，又有横行的margin情况下，在ie6显示margin比设置的大"></a>块属性标签float后，又有横行的margin情况下，在ie6显示margin比设置的大</h3><p>90%（稍微复杂点的页面都会碰到，float布局最常见的浏览器兼容问题）,常见症状是ie6中后面的一块被顶到下一行<br>在float的标签样式控制中加入 display:inline;将其转化为行内属性</p>
<h3 id="图片默认有间距"><a href="#图片默认有间距" class="headerlink" title="图片默认有间距"></a>图片默认有间距</h3><p>几个img标签放在一起的时候，有些浏览器会有默认的间距，加了问题一中提到的通配符也不起作用。<br>使用float属性为img布局。因为img标签是行内属性标签，所以只要不超出容器宽度，img标签都会排在一行里，但是部分浏览器的img标签之间会有个间距。去掉这个间距使用float是正道。<br>其实不仅仅是图片会出现这种情况，凡是行内块元素都会出现这种情况</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;兼容问题估计是所有IT人员的一个眼中钉，它总是无声无息的出现，我们不能屏蔽它，只能尽力避免，当然避免的前提是我们对它有所了解。&lt;br&gt;对于兼容问题我知道的也不是很多，只能有一个写一个，总会了解的越来越多，离它越来越远。&lt;/p&gt;
&lt;h3 id=&quot;IE浏览器下image边框问题
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Grunt 自动化</title>
    <link href="http://yoursite.com/2017/07/05/Grunt-%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    <id>http://yoursite.com/2017/07/05/Grunt-自动化/</id>
    <published>2017-07-05T06:51:26.000Z</published>
    <updated>2017-07-05T09:30:52.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/gruntJs" target="_blank" rel="external">Grunt</a>(<a href="https://gruntjs.com/" target="_blank" rel="external">文档中心https://gruntjs.com/</a>),是一种自动化任务处理器，他就是一个工具框架，有很多插件扩展它的功能。</p>
<p>我学习这个也是从别人的博客上看的，当然人家的比我的详细多了，我这里基本也是粘贴复制的，在这里附上博客地址<a href="http://yujiangshui.com/grunt-basic-tutorial/" target="_blank" rel="external">http://yujiangshui.com/grunt-basic-tutorial/</a>，我这一篇纯粹是写给自己看的，因为记性不好，常常忘记该怎么做，因此把常用命令以博客的形式写下来，方便自己回顾。</p>
<p>Grunt基于Node.js，用JS开发，这样就可以借助Node.js实现跨系统平台的桌面端的操作，例如文档操作等等。此外，Grunt以及它的插件们，都作为一个包，可以用NPM安装进行管理。</p>
<p>所以 NPM 生成的 package.json 项目文件，里面可以记录当前项目中用到的 Grunt 插件，而 Grunt 会调用 Gruntfile.js 这个文件，解析里面的任务（task）并执行相应操作。</p>
<p>如果你对 Node.js、NPM 这些名词不太熟悉，建议先去搜索了解一下，因为下面的命令会涉及到它们，但是本文不会过多介绍。</p>
<h2 id="安装-Grunt"><a href="#安装-Grunt" class="headerlink" title="安装 Grunt"></a>安装 Grunt</h2><p>Grunt 依赖 Node.js 所以在安装之前确保你安装了 Node.js。然后开始安装 Grunt。</p>
<p>实际上，安装的并不是 Grunt，而是 Grunt-cli，也就是命令行的 Grunt，这样你就可以使用 grunt 命令来执行某个项目中的 Gruntfile.js 中定义的 task 。但是要注意，Grunt-cli 只是一个命令行工具，用来执行，而不是 Grunt 这个工具本身。</p>
<p>安装 Grunt-cli 需要使用 NPM，使用下面一行即可在全局范围安装 Grunt-cli ，换句话说，就是你可以在任何地方执行 grunt 命令：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g grunt-cli</div></pre></td></tr></table></figure>
<p>这个 package.json 文件其实是 Node.js 来描述一个项目的文件，JSON 格式。生成这个文件超级简单，推荐用命令行交互式的生成一下：</p>
<p>打开命令行，cd gruntxx 文件夹下面，输入指令 npm init 之后，就出来很多信息，然后开始填写项目名称，填写好了之后回车即可。其实这里你一路回车下去也无妨，但是建议你细细的填一下，不明白的跳过好了。</p>
<p>npm init 填写项目信息<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm init</div></pre></td></tr></table></figure></p>
<p>填写好了之后，查看目录就会发现生成 package.json 文件了，这样就算生成好了。</p>
<p>其实就是一个文件而已，你觉得这种方式麻烦，完全可以新建一个文件，然后将类似下面的代码复制进去，改一下对应选项，保存成 package.json 文件就可以：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="string">"name"</span>: <span class="string">"my-project-name"</span>,</div><div class="line">  <span class="string">"version"</span>: <span class="string">"0.1.0"</span>,</div><div class="line">  <span class="string">"devDependencies"</span>: &#123;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>但这时我们还没有在项目文件中安装 Grunt 以及相关任务插件。</p>
<h2 id="安装-Grunt-和所需要的插件"><a href="#安装-Grunt-和所需要的插件" class="headerlink" title="安装 Grunt 和所需要的插件"></a>安装 Grunt 和所需要的插件</h2><p>一般需要用到：</p>
<ul>
<li>合并文件：grunt-contrib-concat</li>
<li>语法检查：grunt-contrib-jshint</li>
<li>Scss 编译：grunt-contrib-sass</li>
<li>Less 编译：grunt-contrib-less</li>
<li>压缩文件：grunt-contrib-uglify</li>
<li>监听文件变动：grunt-contrib-watch</li>
<li>建立本地服务器：grunt-contrib-connect</li>
</ul>
<p>它们的命名和文档都很规范，因为这些是官方提供的比较常用的插件。这些插件同时都是 NPM 管理的包，比如 grunt-contrib-concat - npm 你也可以在这上面看到用法等。</p>
<p>下面我们就要在这个项目中安装这些插件，执行命令：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install grunt --save-dev</div></pre></td></tr></table></figure></p>
<p>表示通过 npm 安装了 grunt 到当前项目，同时加上了 –save-dev 参数，表示会把刚安装的东西添加到 package.json 文件中。不信你打开 package.json 文件看下，是不是多了<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="string">"devDependencies"</span>: &#123;</div><div class="line">  <span class="string">"grunt"</span>: <span class="string">"^0.4.5"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>没错，这个的意思就是当前项目依赖 grunt，后面是它的版本，咱们不用管。如果安装的时候没有添加 –save-dev 参数，这里就不会出现了，你需要自行添加上去。</p>
<p>下面我们来安装 Grunt 的插件，当然，不需要一个个的安装，太麻烦了，我们可以：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">npm install -g grunt-contrib-concat grunt-contrib-jshint grunt-contrib-sass grunt-contrib-uglify grunt-contrib-watch grunt-contrib-connect grunt-contrib-less grunt-contrib-cssmin</div><div class="line"></div><div class="line">npm install --save-dev grunt-contrib-concat grunt-contrib-jshint grunt-contrib-sass grunt-contrib-uglify grunt-contrib-watch grunt-contrib-connect grunt-contrib-less grunt-contrib-cssmin</div></pre></td></tr></table></figure></p>
<h2 id="配置-Gruntfile-js-的语法"><a href="#配置-Gruntfile-js-的语法" class="headerlink" title="配置 Gruntfile.js 的语法"></a>配置 Gruntfile.js 的语法</h2><p>插件也装好了，开始写任务吧！既然是要程序来读取执行，必要要有一定的语法规范，下面来简单的说一下：</p>
<p>首先要明白，这是一个 JS 文件，你可以写任意的 JS 代码，比如声明一个 对象 来存储一会要写任务的参数，或者是一个变量当作开关等等。</p>
<p>然后，所有的代码要包裹在<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">module.exports = <span class="keyword">function</span>(grunt) &#123;</div><div class="line">    ...</div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
<p>里面。没有为什么。</p>
<p>在这里面的代码，除去你自己写的乱七八糟的 JS，与 Grunt 有关的主要有三块代码：任务配置代码、插件加载代码、任务注册代码。</p>
<p>顾名思义，这三块代码，任务配置代码就是调用插件配置一下要执行的任务和实现的功能，插件加载代码就是把需要用到的插件加载进来，任务注册代码就是注册一个 task，里面包含刚在前面编写的任务配置代码。</p>
<p>这样，就可以用 grunt 来执行注册的一个 task 从而根据任务配置代码调用需要的插件来执行相应的操作。</p>
<p>下面来分别看一下这三块代码的写法。</p>
<h2 id="任务配置代码"><a href="#任务配置代码" class="headerlink" title="任务配置代码"></a>任务配置代码</h2><p>我就不一一配置了，这是我最后配置完成后的代码：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div></pre></td><td class="code"><pre><div class="line">module.exports = <span class="keyword">function</span>(grunt) &#123;</div><div class="line"></div><div class="line">  var sassStyle = <span class="string">'expanded'</span>;</div><div class="line"></div><div class="line">  grunt.initConfig(&#123;</div><div class="line">    pkg: grunt.file.readJSON(<span class="string">'package.json'</span>),</div><div class="line">    sass: &#123; // sass转译</div><div class="line">      output : &#123;</div><div class="line">        options: &#123;</div><div class="line">          style: sassStyle</div><div class="line">        &#125;,</div><div class="line">        files: &#123;</div><div class="line">          <span class="string">'./scss/style.css'</span>: <span class="string">'./scss/style.scss'</span></div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    &#125;,</div><div class="line">    less: &#123;</div><div class="line">      development: &#123; // less转译</div><div class="line">        src: [<span class="string">'./less/user.less'</span>],</div><div class="line">        dest: <span class="string">'./less/global.css'</span>,</div><div class="line">      &#125;</div><div class="line">    &#125;,</div><div class="line">    concat: &#123; //文件合并</div><div class="line">      cssDist: &#123; </div><div class="line">        src: [<span class="string">'./css/*.css'</span>],</div><div class="line">        dest: <span class="string">'./style/global.css'</span>,</div><div class="line">      &#125;,</div><div class="line">      dist: &#123;</div><div class="line">        src: [<span class="string">'./src/*.js'</span>],</div><div class="line">        dest: <span class="string">'./scripts/global.js'</span>,</div><div class="line">      &#125;,</div><div class="line">    &#125;,</div><div class="line">    cssmin: &#123; // css压缩</div><div class="line">         options: &#123;</div><div class="line">             keepSpecialComments: 0</div><div class="line">         &#125;,</div><div class="line">         compress: &#123;</div><div class="line">             files: &#123;</div><div class="line">                 <span class="string">'./style/default.min.css'</span>: [</div><div class="line">                     <span class="string">"css/css.css"</span>,</div><div class="line">                     <span class="string">"css/commen.css"</span></div><div class="line">                 ]</div><div class="line">             &#125;</div><div class="line">         &#125;</div><div class="line">    &#125;,</div><div class="line">    uglify: &#123; // Js 压缩</div><div class="line">      compressjs: &#123;</div><div class="line">        files: &#123;</div><div class="line">          <span class="string">'./scripts/global.min.js'</span>: [<span class="string">'./scripts/global.js'</span>]</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    &#125;,</div><div class="line">    jshint: &#123; // 语法检查</div><div class="line">      all: [<span class="string">'./scripts/global.js'</span>]</div><div class="line">    &#125;,</div><div class="line">    watch: &#123; // 实时监听</div><div class="line">      scripts: &#123;</div><div class="line">        files: [<span class="string">'./src/plugin.js'</span>,<span class="string">'./src/plugin2.js'</span>],</div><div class="line">        tasks: [<span class="string">'concat'</span>,<span class="string">'uglify'</span>]</div><div class="line">      &#125;,</div><div class="line">      sass: &#123;</div><div class="line">        files: [<span class="string">'./scss/style.scss'</span>],</div><div class="line">        tasks: [<span class="string">'sass'</span>]</div><div class="line">      &#125;,</div><div class="line">      css: &#123;</div><div class="line">        files: [<span class="string">'./css/*.css'</span>],</div><div class="line">        tasks: [<span class="string">'concat'</span>]</div><div class="line">      &#125;,</div><div class="line">      livereload: &#123;</div><div class="line">          options: &#123;</div><div class="line">              livereload: <span class="string">'&lt;%= connect.options.livereload %&gt;'</span></div><div class="line">          &#125;,</div><div class="line">          files: [</div><div class="line">              <span class="string">'index.html'</span>,</div><div class="line">              <span class="string">'./scss/style.css'</span>,</div><div class="line">              <span class="string">'./scripts/global.min.js'</span></div><div class="line">          ]</div><div class="line">      &#125;</div><div class="line">    &#125;,</div><div class="line">    connect: &#123;</div><div class="line">      options: &#123;</div><div class="line">          port: 9000,</div><div class="line">          open: <span class="literal">true</span>,</div><div class="line">          livereload: 35729,</div><div class="line">          // Change this to <span class="string">'0.0.0.0'</span> to access the server from outside</div><div class="line">          hostname: <span class="string">'localhost'</span></div><div class="line">      &#125;,</div><div class="line">      server: &#123;</div><div class="line">        options: &#123;</div><div class="line">          port: 9001,</div><div class="line">          base: <span class="string">'./'</span></div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;);</div><div class="line"></div><div class="line">  grunt.loadNpmTasks(<span class="string">'grunt-contrib-sass'</span>);</div><div class="line">  grunt.loadNpmTasks(<span class="string">'grunt-contrib-cssmin'</span>);</div><div class="line">  grunt.loadNpmTasks(<span class="string">'grunt-contrib-less'</span>);</div><div class="line">  grunt.loadNpmTasks(<span class="string">'grunt-contrib-concat'</span>);</div><div class="line">  grunt.loadNpmTasks(<span class="string">'grunt-contrib-jshint'</span>);</div><div class="line">  grunt.loadNpmTasks(<span class="string">'grunt-contrib-uglify'</span>);</div><div class="line">  grunt.loadNpmTasks(<span class="string">'grunt-contrib-watch'</span>);</div><div class="line">  grunt.loadNpmTasks(<span class="string">'grunt-contrib-connect'</span>);</div><div class="line"></div><div class="line"></div><div class="line">  grunt.registerTask(<span class="string">'outputcss'</span>,[<span class="string">'sass'</span>]);</div><div class="line">  grunt.registerTask(<span class="string">'concatjs'</span>,[<span class="string">'concat'</span>]);</div><div class="line">  grunt.registerTask(<span class="string">'compressjs'</span>,[<span class="string">'concat'</span>,<span class="string">'uglify'</span>]);</div><div class="line">  grunt.registerTask(<span class="string">'watchit'</span>,[<span class="string">'sass'</span>,<span class="string">'concat'</span>,<span class="string">'uglify'</span>,<span class="string">'connect'</span>,<span class="string">'watch'</span>]);</div><div class="line">  grunt.registerTask(<span class="string">'default'</span>,[<span class="string">'sass'</span>,<span class="string">'less'</span>,<span class="string">'concat'</span>,<span class="string">'cssmin'</span>,<span class="string">'uglify'</span>,<span class="string">'connect'</span>,<span class="string">'watch'</span>]);</div><div class="line"></div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
<p>添加了 connect 任务，用来新建一个本地服务器，以当前目录作为服务器根目录，然后添加 watch 任务，监听 Scss 文件变动，如果变了，执行一下 sass 任务，监听JS，css，如果变了，执行 合并、检查、压缩 任务，监听 html、css、js 文件，如果变动，livereload 自动刷新打开的页面。</p>
<p>而注册的 watchit task 就是我们的终极 task，第一次执行，先编译 sass、再合并、检查、压缩、开启服务器、监听文件变动。我们执行一下 grunt watchit 就可以看到效果了，你可以修改一下 scss 文件，把字体设置大一点，切换到浏览器的时候，就看到了实时刷新效果。也可以修改一下 JS，故意改错一下，会发现 jshint 会提示你出错了。</p>
<h2 id="项目文件传输与协作"><a href="#项目文件传输与协作" class="headerlink" title="项目文件传输与协作"></a>项目文件传输与协作</h2><p>项目开发完成之后，往往需要 push 到 Github 或者上传 FTP 等。或许其他人会接手你的项目继续开发，或者你会换台电脑进行开发。</p>
<p>当小明用 git 上传 Github 的时候，傻了眼，项目里 node_modules 文件夹下面的东西要十几M呢，这比我项目本身还大，上传下载都不方便。</p>
<p>其实这些插件和 grunt 不需要上传，因为有 package.json 这个文件记录了你这个项目中依赖的 grunt 插件，你只需要上传这个文件即可。下载下来之后，只需要在这个项目文件夹下面，输入命令 npm install，NPM 会自动读取 package.json 文件，将 grunt 和有关插件给你下载下来，很方便的。</p>
<p>也不需要在本地上传的时候删除，用 git 的话，可以使用 .gitignore 文件来过滤掉这个文件夹，禁止 git 追踪。</p>
<h2 id="总结与扩展阅读"><a href="#总结与扩展阅读" class="headerlink" title="总结与扩展阅读"></a>总结与扩展阅读</h2><p>Grunt 就是这样一种任务自动运行器，应用好它可以减轻很多不必要的人工操作，只需要专注 coding 就可以。甚至还有Grunt 插件帮你自动完成 CSS Sprite，更多功能还需要你自己去摸索。</p>
<p>新手看完本文，再看一下 Grunt 官方文档 应该没有太多疑问了，那就再看一遍把。当然也有中文版。</p>
<p>除了 Grunt 之外，同类型比较火的还有 Gulp 这个工具。其实两个东西的功能是一样的，只不过是任务配置 JS 的语法不同，Gulp 的 Gulpfile.js 的写法更加通俗易懂，上手更快。但是 Gulp 的插件等感觉不如 Grunt，Grunt 官方提供了一些常见的插件，满足大部分日常工作，而且可靠值得信赖，而 Gulp 好像没有太多官方出品，各种插件不太规范。简单的说，Grunt 和 Gulp 就像 iPhone 与 Android 一样，一个质量高学习难一点，一个学起来简单但是有点那个，你懂得。</p>
<p>此外，可以看一些高手的项目，你会发现更好的 Grunt 用法，比如 Yeoman 生成的项目，就有很完善的 Grunt 任务和插件，此外，jQuery 等也用 Grunt 进行打包，这些 Grunt 文件你都可以查看研究一下他们的写法和用法，受益匪浅。</p>
<p>最后，如果你懒得跟着文章一点点的配置示例项目，你也可以跳转到示例项目的 grunt 分支，这里面是我配置好的，你需要先 npm install 然后就可以直接执行那些命令。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/gruntJs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Grunt&lt;/a&gt;(&lt;a href=&quot;https://gruntjs.com/&quot; target=&quot;_blank&quot; rel=&quot;externa
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>New Date的属性</title>
    <link href="http://yoursite.com/2017/07/04/New-Date%E7%9A%84%E5%B1%9E%E6%80%A7/"/>
    <id>http://yoursite.com/2017/07/04/New-Date的属性/</id>
    <published>2017-07-04T07:02:04.000Z</published>
    <updated>2017-07-04T07:34:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>在写代码用到时间的时候经常记不住获取时、分、秒等的属性怎么写，因此在这里将他们整理出来，方便查询。</p>
<h2 id="时间用法表格"><a href="#时间用法表格" class="headerlink" title="时间用法表格"></a>时间用法表格</h2><table>
<thead>
<tr>
<th>产品</th>
<th>价格</th>
</tr>
</thead>
<tbody>
<tr>
<td>getDate()</td>
<td>从 Date 对象返回一个月中的某一天 (1 ~ 31)。</td>
</tr>
<tr>
<td>getDay()</td>
<td>从 Date 对象返回一周中的某一天 (0 ~ 6)。</td>
</tr>
<tr>
<td>getFullYear()</td>
<td>从 Date 对象以四位数字返回年份。</td>
</tr>
<tr>
<td>getHours()</td>
<td>返回 Date 对象的小时 (0 ~ 23)。</td>
</tr>
<tr>
<td>getMilliseconds()</td>
<td>返回 Date 对象的毫秒(0 ~ 999)。</td>
</tr>
<tr>
<td>getMinutes()</td>
<td>返回 Date 对象的分钟 (0 ~ 59)。</td>
</tr>
<tr>
<td>getMonth()</td>
<td>从 Date 对象返回月份 (0 ~ 11)。</td>
</tr>
<tr>
<td>getSeconds()</td>
<td>返回 Date 对象的秒数 (0 ~ 59)。</td>
</tr>
<tr>
<td>getTime()</td>
<td>返回 1970 年 1 月 1 日至今的毫秒数。</td>
</tr>
<tr>
<td>getTimezoneOffset()</td>
<td>返回本地时间与格林威治标准时间 (GMT) 的分钟差。</td>
</tr>
<tr>
<td>getUTCDate()</td>
<td>根据世界时从 Date 对象返回月中的一天 (1 ~ 31)。</td>
</tr>
<tr>
<td>getUTCDay()</td>
<td>根据世界时从 Date 对象返回周中的一天 (0 ~ 6)。</td>
</tr>
<tr>
<td>getUTCFullYear()</td>
<td>根据世界时从 Date 对象返回四位数的年份。</td>
</tr>
<tr>
<td>getUTCHours()</td>
<td>根据世界时返回 Date 对象的小时 (0 ~ 23)。</td>
</tr>
<tr>
<td>getUTCMilliseconds()</td>
<td>根据世界时返回 Date 对象的毫秒(0 ~ 999)。</td>
</tr>
<tr>
<td>getUTCMinutes()</td>
<td>根据世界时返回 Date 对象的分钟 (0 ~ 59)。</td>
</tr>
<tr>
<td>getUTCMonth()</td>
<td>根据世界时从 Date 对象返回月份 (0 ~ 11)。</td>
</tr>
<tr>
<td>getUTCSeconds()</td>
<td>根据世界时返回 Date 对象的秒钟 (0 ~ 59)。</td>
</tr>
<tr>
<td>getYear()</td>
<td>已废弃。 请使用 getFullYear() 方法代替。</td>
</tr>
<tr>
<td>parse()</td>
<td>返回1970年1月1日午夜到指定日期（字符串）的毫秒数。</td>
</tr>
<tr>
<td>setDate()</td>
<td>设置 Date 对象中月的某一天 (1 ~ 31)。</td>
</tr>
<tr>
<td>setFullYear()</td>
<td>设置 Date 对象中的年份（四位数字）。</td>
</tr>
<tr>
<td>setHours()</td>
<td>设置 Date 对象中的小时 (0 ~ 23)。</td>
</tr>
<tr>
<td>setMilliseconds()</td>
<td>设置 Date 对象中的毫秒 (0 ~ 999)。</td>
</tr>
<tr>
<td>setMinutes()</td>
<td>设置 Date 对象中的分钟 (0 ~ 59)。</td>
</tr>
<tr>
<td>setMonth()</td>
<td>设置 Date 对象中月份 (0 ~ 11)。</td>
</tr>
<tr>
<td>setSeconds()</td>
<td>设置 Date 对象中的秒钟 (0 ~ 59)。</td>
</tr>
<tr>
<td>setTime()</td>
<td>setTime() 方法以毫秒设置 Date 对象。</td>
</tr>
<tr>
<td>setUTCDate()</td>
<td>根据世界时设置 Date 对象中月份的一天 (1 ~ 31)。</td>
</tr>
<tr>
<td>setUTCFullYear()</td>
<td>根据世界时设置 Date 对象中的年份（四位数字）。</td>
</tr>
<tr>
<td>setUTCHours()</td>
<td>根据世界时设置 Date 对象中的小时 (0 ~ 23)。</td>
</tr>
<tr>
<td>setUTCMilliseconds()</td>
<td>根据世界时设置 Date 对象中的毫秒 (0 ~ 999)。</td>
</tr>
<tr>
<td>setUTCMinutes()</td>
<td>根据世界时设置 Date 对象中的分钟 (0 ~ 59)。</td>
</tr>
<tr>
<td>setUTCMonth()</td>
<td>根据世界时设置 Date 对象中的月份 (0 ~ 11)。</td>
</tr>
<tr>
<td>setUTCSeconds()</td>
<td>setUTCSeconds() 方法用于根据世界时 (UTC) 设置指定时间的秒字段。</td>
</tr>
<tr>
<td>setYear()</td>
<td>已废弃。请使用 setFullYear() 方法代替。</td>
</tr>
<tr>
<td>toDateString()</td>
<td>把 Date 对象的日期部分转换为字符串。</td>
</tr>
<tr>
<td>toGMTString()</td>
<td>已废弃。请使用 toUTCString() 方法代替。</td>
</tr>
<tr>
<td>toISOString()</td>
<td>使用 ISO 标准返回字符串的日期格式。</td>
</tr>
<tr>
<td>toJSON()</td>
<td>以 JSON 数据格式返回日期字符串。</td>
</tr>
<tr>
<td>toLocaleDateString()</td>
<td>根据本地时间格式，把 Date 对象的日期部分转换为字符串。</td>
</tr>
<tr>
<td>toLocaleTimeString()</td>
<td>根据本地时间格式，把 Date 对象的时间部分转换为字符串。</td>
</tr>
<tr>
<td>toLocaleString()</td>
<td>据本地时间格式，把 Date 对象转换为字符串。</td>
</tr>
<tr>
<td>toString()</td>
<td>把 Date 对象转换为字符串。</td>
</tr>
<tr>
<td>toTimeString()</td>
<td>把 Date 对象的时间部分转换为字符串。</td>
</tr>
<tr>
<td>toUTCString()</td>
<td>根据世界时，把 Date 对象转换为字符串。</td>
</tr>
<tr>
<td>UTC()</td>
<td>根据世界时返回 1970 年 1 月 1 日 到指定日期的毫秒数。</td>
</tr>
<tr>
<td>valueOf()</td>
<td>返回 Date 对象的原始值。</td>
</tr>
</tbody>
</table>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在写代码用到时间的时候经常记不住获取时、分、秒等的属性怎么写，因此在这里将他们整理出来，方便查询。&lt;/p&gt;
&lt;h2 id=&quot;时间用法表格&quot;&gt;&lt;a href=&quot;#时间用法表格&quot; class=&quot;headerlink&quot; title=&quot;时间用法表格&quot;&gt;&lt;/a&gt;时间用法表格&lt;/h2&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>常用电脑快捷键</title>
    <link href="http://yoursite.com/2017/07/04/%E5%B8%B8%E7%94%A8%E7%94%B5%E8%84%91%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>http://yoursite.com/2017/07/04/常用电脑快捷键/</id>
    <published>2017-07-04T02:25:55.000Z</published>
    <updated>2017-07-04T03:34:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>习惯了鼠标的运用，对于键盘本身却并不是特别了解，在这里，整理了一些常用的快捷键帮助自己更好的使用电脑。</p>
<h2 id="从所有快捷键中整理出的自己常用的快捷键"><a href="#从所有快捷键中整理出的自己常用的快捷键" class="headerlink" title="从所有快捷键中整理出的自己常用的快捷键"></a>从所有快捷键中整理出的自己常用的快捷键</h2><blockquote>
<p>WIN 显示或隐藏“开始”菜单<br>WIN + D 显示桌面<br>WIN + M 最小化所有窗口 //我认为和WIN + D大同小异<br>WIN + SHIFt + M 还原最小化的窗口<br>WIN + E 打开“我的电脑”<br>WIN + R 打开“运行”对话框<br>Ctrl + A 选中全部内容<br>Ctrl + C 复制<br>Ctrl + X 剪切<br>Ctrl + V 粘贴<br>Ctrl + Z 撤消<br>Ctrl + W 关闭程序<br>Ctrl + F4 关闭当前页面<br>DELETE 删除<br>Shift + Delete 永久删除所选项，而不将它放在‘回收站’中<br>Alt + F4 关闭当前项目或退出程序<br>Alt + Tab在打开的项目之中进行切换<br>F5刷新当前窗口<br>Shift + F5 强制刷新</p>
</blockquote>
<h2 id="常用电脑快捷键"><a href="#常用电脑快捷键" class="headerlink" title="常用电脑快捷键"></a>常用电脑快捷键</h2><blockquote>
<p>F1显示程序或系统帮助内容<br>F2重新命名所选项目<br>F3搜索文件或文件夹<br>F5刷新当前窗口<br>F6循环切换屏幕元素<br>F10激活当前程序中的菜单条<br>Ctrl + A 选中全部内容<br>Ctrl + C 复制<br>Ctrl + X 剪切<br>Ctrl + V 粘贴<br>Ctrl + Z 撤消<br>Ctrl + Esc 显示“开始”菜单<br>Alt + Enter 查看所选项目的属性<br>Alt + F4 关闭当前项目或退出程序<br>Alt + 空格键 为当前窗口打开快捷菜单<br>Alt + Tab 在打开的项目之间切换<br>Alt + Esc 以项目打开的顺序循环切换<br>DELETE删除<br>Shift + Delete 永久删除所选项<br>Shift + F10 显示所选项的快捷菜单<br>Esc取消当前任务<br>ctrl + alt + delete 电脑锁屏快捷键<br>电脑：print screen sysrq 在键盘右上角一般靠近F12键截图<br>qq：ctrl + alt + A 截图<br>360浏览器：Ctrl + Shift + X 截图</p>
</blockquote>
<h2 id="Ctrl快捷键"><a href="#Ctrl快捷键" class="headerlink" title="Ctrl快捷键"></a>Ctrl快捷键</h2><blockquote>
<p>Ctrl + S 保存<br>Ctrl + W 关闭程序<br>Ctrl + N 新建<br>Ctrl + O 打开<br>Ctrl + Z 撤销<br>Ctrl + F 查找<br>Ctrl + X剪切<br>Ctrl + C 复制<br>Ctrl + V 粘贴<br>Ctrl + A 全选<br>Ctrl + [ 缩小文字<br>Ctrl + [ 缩小文字<br>Ctrl + ] 放大文字<br>Ctrl + B 粗体<br>Ctrl + I 斜体<br>Ctrl + U 下划线<br>Ctrl + Shift 输入法切换<br>Ctrl + 空格 中英文切换<br>Ctrl + 回车 QQ号中发送信息<br>Ctrl + Home 光标快速移到文件头<br>Ctrl + End 光标快速移到文件尾<br>Ctrl + Esc 显示开始菜单<br>Ctrl + Shift+ 快速放大文字<br>Ctrl + F5 在IE中强行刷新<br>Ctrl + 拖动文件 启动\关闭输入法<br>Ctrl + Shift + 拖动文件 创建快捷方式</p>
</blockquote>
<h2 id="Alt快捷键"><a href="#Alt快捷键" class="headerlink" title="Alt快捷键"></a>Alt快捷键</h2><blockquote>
<p>Alt + F4 关闭当前程序<br>Alt + 空格 + C 关闭窗口<br>Alt + 空格 + N 最小化当前窗口<br>Alt + 空格 + R 恢复最小化窗口<br>Alt + 空格 + X 最大化当前窗口<br>Alt + 空格 + M 移动窗口<br>Alt + 空格 + S 改变窗口大小<br>Alt + Tab 两个程序交换<br>Alt + F 打开文件菜单<br>Alt + V 打开视图菜单<br>Alt + E 打开编辑菜单<br>Alt + I 打开插入菜单<br>Alt + O 打开格式菜单<br>Alt + T 打开工具菜单<br>Alt + A 打开表格菜单<br>Alt + W 打开窗口菜单<br>Alt + H 打开帮助菜单<br>Alt + 回车 查看文件属性<br>Alt + 双击文件 查看文件属性<br>Shift + 空格 半\全角切换<br>Shift + 右击右菜单 打开方式<br>Shift + F10 选中文件的右菜单<br>Shift + 多级文件 全部关闭<br>Shift + Del 直接删除文件</p>
</blockquote>
<h2 id="对话框快捷键"><a href="#对话框快捷键" class="headerlink" title="对话框快捷键"></a>对话框快捷键</h2><blockquote>
<p>Ctrl + Tab 在选项卡之间向前移动<br>Ctrl + Shift + Tab 在选项卡之间向后移动<br>Shift + Tab 在选项之间向后移动<br>ALT + 带下划线的字母 执行相应的命令或选中相应的选项<br>Enter执行活选项动或按钮所对应的命令<br>space空格键如果活选项动是复选框，则选中或清除该复选框<br>F1显示帮助<br>F4显示当前列表中的项目<br>BackSpace如果在“另存为”或“打开”对话框中选中了某个文件夹，则打开上一级文件夹</p>
</blockquote>
<h2 id="辅助键盘快捷键"><a href="#辅助键盘快捷键" class="headerlink" title="辅助键盘快捷键"></a>辅助键盘快捷键</h2><blockquote>
<p>右侧SHIFT键八秒钟切换“筛选键”的开和关<br>左边的ALT + 左边的SHIFT + PRINTSCREEN切换“高对比度”的开和关<br>左边的ALT + 左边的SHIFT + NUMLOCK切换“鼠标键”的开和关<br>Shift键五次切换“粘滞键”的开和关<br>NumLock键五秒钟切换“切换键”的开和关<br>Alt + Shift + +  扩展标题下的文本<br>Alt + Shift + -  折叠标题下的文本<br>Alt + Shift + A  扩展或折叠所有文本或标题<br>数字键盘上的斜杠（/）隐藏或显示字符格式<br>Alt + Shift + L 只显示首行正文或显示全部正文<br>Alt + Shift + 1 显示所有具有”标题1”样式的标题<br>Alt + Shift + n 显示从”标题1”到”标题n”的<br>“Windows资源管理器”键盘快捷键<br>END显示当前窗口的底端<br>Home显示当前窗口的顶端<br>NUMLOCK + 数字键盘的星号(*) 显示所选文件夹的所有子文件夹<br>NUMLOCK + 数字键盘的加号( + ) 显示所选文件夹的内容<br>NUMLOCK + 数字键盘的减号(-) 折叠所选的文件夹<br>单独按Windows：显示或隐藏“开始”功能表<br>Windows + BREAK 显示“系统属性”对话框<br>Windows + D 显示桌面<br>Windows + M 最小化所有窗口<br>Windows + Shift + M 还原最小化的窗口<br>Windows + E 开启“资源管理器”<br>Windows + F 查找文件或文件夹<br>Windows + CTRL + F 查找电脑<br>Windows + F1 显示Windows“帮助”<br>Windows + R 运行<br>Windows + U 开启“公用程序管理器”<br>Windows + L 切换使用者</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;习惯了鼠标的运用，对于键盘本身却并不是特别了解，在这里，整理了一些常用的快捷键帮助自己更好的使用电脑。&lt;/p&gt;
&lt;h2 id=&quot;从所有快捷键中整理出的自己常用的快捷键&quot;&gt;&lt;a href=&quot;#从所有快捷键中整理出的自己常用的快捷键&quot; class=&quot;headerlink&quot; ti
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>working copy locked 问题</title>
    <link href="http://yoursite.com/2017/06/29/working-copy-locked-%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2017/06/29/working-copy-locked-问题/</id>
    <published>2017-06-29T06:10:10.000Z</published>
    <updated>2017-06-29T10:28:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>SVN本地更新时，由于一些操作中断更新，如磁盘空间不够，用户取消，可能会造成本地文件被锁定的情况。一般出现这种情况的解决方法：<br>１、可以使用SVN clean up来清除锁定。</p>
<p>２、如果不是本目录锁定，系统提示上一层目录锁定，需要到上一层或者根目录中清除。</p>
<p>３.如果在根目录下都无法clean的话，一般采取的方法是另外找一个目录重新CHECKOUT。但有时有时SVN目录下可能有一些自己本地修改的文件，还未提交到SVN服务器，这时重新CHECKOUT需要注意本地文件的备份，并且不要强制覆盖服务器上其它人修改的内容。</p>
<p>４.如果觉得第３种很麻烦，可以考虑这样的方法。其实SVN加锁会在.SVN（隐藏文件）中生成一个名字叫lock的文件（无后缀），查找所有的，手工删除。然后再尝试更新，系统可能会提示某个.base文件无法访问。找到它，把相关的文件或其所在的目录删除，重新UPDATE。工作量就小多了。</p>
<p>解决svn的working copy locked并且cleanup恢复不能的情况<br>产生这种情况大多是因为上次svn命令执行失败且被锁定了。<br>如果clean up没有效果的话只好手动删除锁定文件。<br>cd 到svn项目目录下，然后执行如下命令<br>del lock /q/s<br>就把锁删掉了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;SVN本地更新时，由于一些操作中断更新，如磁盘空间不够，用户取消，可能会造成本地文件被锁定的情况。一般出现这种情况的解决方法：&lt;br&gt;１、可以使用SVN clean up来清除锁定。&lt;/p&gt;
&lt;p&gt;２、如果不是本目录锁定，系统提示上一层目录锁定，需要到上一层或者根目录中清除
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>微信小程序——400报错</title>
    <link href="http://yoursite.com/2017/06/23/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    <id>http://yoursite.com/2017/06/23/微信小程序/</id>
    <published>2017-06-23T02:26:27.000Z</published>
    <updated>2017-06-23T07:14:56.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近一直跟着demo做小程序，但是刚开始就卡在了请求豆瓣电影API数据上，折腾了很久才发现问题，初始请求数据代码如下：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">wx.request(&#123;</div><div class="line">    url: <span class="string">'http://api.douban.com/v2/movie/top250'</span>,</div><div class="line">    method: <span class="string">'GET'</span>,</div><div class="line">    data: &#123;&#125;,</div><div class="line">    header: &#123;</div><div class="line">        <span class="string">'Accept'</span>: <span class="string">'application/json'</span></div><div class="line">    &#125;,</div><div class="line">    success: <span class="keyword">function</span>(res) &#123;</div><div class="line">        console.log(res);</div><div class="line">        that.setData(&#123;</div><div class="line">            movieList: res</div><div class="line">        &#125;)</div><div class="line">    &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
<p>但是请求之后总是报400错误:<br><img src="/2017/06/23/微信小程序/QQ截图20170623103533.png" alt="报错信息"><br>后来才发现，小程序升级之后，数据请求的header写法已经变了，需要修改请求头部<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"> wx.request(&#123;</div><div class="line">    url: <span class="string">'http://api.douban.com/v2/movie/top250'</span>,</div><div class="line">    method: <span class="string">'GET'</span>,</div><div class="line">    data: &#123;&#125;,</div><div class="line">    header: &#123;</div><div class="line">        <span class="string">"Content-Type"</span>:<span class="string">"json"</span></div><div class="line">    &#125;,</div><div class="line">    success: <span class="keyword">function</span>(res) &#123;</div><div class="line">        console.log(res);</div><div class="line">        that.setData(&#123;</div><div class="line">            movieList: res</div><div class="line">        &#125;)</div><div class="line">    &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
<p>改成这样之后就OK了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近一直跟着demo做小程序，但是刚开始就卡在了请求豆瓣电影API数据上，折腾了很久才发现问题，初始请求数据代码如下：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>VUE简单教程</title>
    <link href="http://yoursite.com/2017/06/20/VUE%E7%AE%80%E5%8D%95%E6%95%99%E7%A8%8B/"/>
    <id>http://yoursite.com/2017/06/20/VUE简单教程/</id>
    <published>2017-06-20T08:17:38.000Z</published>
    <updated>2017-06-21T08:34:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>在使用vue.js构建大型项目时建议使用NPM安装</p>
<h2 id="安装webpack"><a href="#安装webpack" class="headerlink" title="安装webpack"></a>安装webpack</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install webpack -g</div></pre></td></tr></table></figure>
<h2 id="安装vue"><a href="#安装vue" class="headerlink" title="安装vue"></a>安装vue</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 最新稳定版本</span></div><div class="line">$ npm install vue</div><div class="line"><span class="comment"># 最新稳定兼容版本</span></div><div class="line">$ npm install vue@csp</div></pre></td></tr></table></figure>
<h2 id="安装vue-cli，执行以下命令安装vue-cli"><a href="#安装vue-cli，执行以下命令安装vue-cli" class="headerlink" title="安装vue cli，执行以下命令安装vue cli"></a>安装vue cli，执行以下命令安装vue cli</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g vue-cli</div></pre></td></tr></table></figure>
<p>安装完vue-cli之后，我们就可以基于vue-webpack-simple模板和vue-webpack模板创建项目了<br>在硬盘上找一个文件夹放工程用，在终端中进入该目录</p>
<h2 id="根据模板创建项目"><a href="#根据模板创建项目" class="headerlink" title="根据模板创建项目"></a>根据模板创建项目</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">vue init webpack-simple 工程名字&lt;工程名字不能用中文&gt;</div><div class="line">或者创建vue1.0的项目</div><div class="line">vue init webpack-simple<span class="comment">#1.0 工程名字&lt;工程名字不能用中文&gt;</span></div></pre></td></tr></table></figure>
<p>在创建模板的时候会有一些初始化的设置：</p>
<p>Target directory exists. Continue? (Y/n) 直接回车默认(然后会下载 vue2.0模板，这里可能需要连代理)</p>
<p>Project name (vue-test) 直接回车默认</p>
<p>Project description (A Vue.js project) 直接回车默认</p>
<p>Author 写你自己的名字</p>
<h2 id="cd-命令进入创建的工程目录并安装项目依赖"><a href="#cd-命令进入创建的工程目录并安装项目依赖" class="headerlink" title="cd 命令进入创建的工程目录并安装项目依赖"></a>cd 命令进入创建的工程目录并安装项目依赖</h2><p>在做项目时经常用到的是路由模块vue-router和网络请求模块vue-resource<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install vue-router vue-resource --save</div></pre></td></tr></table></figure></p>
<h2 id="启动项目"><a href="#启动项目" class="headerlink" title="启动项目"></a>启动项目</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm run dev</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在使用vue.js构建大型项目时建议使用NPM安装&lt;/p&gt;
&lt;h2 id=&quot;安装webpack&quot;&gt;&lt;a href=&quot;#安装webpack&quot; class=&quot;headerlink&quot; title=&quot;安装webpack&quot;&gt;&lt;/a&gt;安装webpack&lt;/h2&gt;&lt;figure clas
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>浅析解决跨域问题的几种方法</title>
    <link href="http://yoursite.com/2017/06/08/%E6%B5%85%E6%9E%90%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2017/06/08/浅析解决跨域问题的几种方法/</id>
    <published>2017-06-08T07:45:17.000Z</published>
    <updated>2017-06-08T07:51:26.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、JSONP"><a href="#一、JSONP" class="headerlink" title="一、JSONP"></a>一、JSONP</h2><p>  原理是：动态插入script标签，通过script标签引入一个js文件，这个js文件载入成功后会执行我们在url参数中指定的函数，并且会把我们需要的json数据作为参数传入。</p>
<p>  由于同源策略的限制，XmlHttpRequest只允许请求当前源(域名、协议、端口)的资源，为了实现跨域请求，可以通过script标签实现跨域请求，然后在服务端输出JSON数据并执行回调函数，从而解决了跨域的数据请求。</p>
<p>  优点是兼容性好，简单易用，支持浏览器与服务器双向通信。缺点是只支持GET请求。</p>
<p>  JSONP：json+padding(内填充)，顾名思义，就是把JSON填充到一个盒子里</p>
<p>  javascript 代码</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">createJs(sUrl)&#123; </div><div class="line"></div><div class="line">    var oScript = document.createElement(<span class="string">'script'</span>); </div><div class="line">    oScript.type = <span class="string">'text/javascript'</span>; </div><div class="line">    oScript.src = sUrl; </div><div class="line">    document.getElementsByTagName(<span class="string">'head'</span>)[0].appendChild(oScript); </div><div class="line">&#125; </div><div class="line"></div><div class="line">createJs(<span class="string">'jsonp.js'</span>); </div><div class="line"></div><div class="line">box(&#123; </div><div class="line">   <span class="string">'name'</span>: <span class="string">'test'</span> </div><div class="line">&#125;); </div><div class="line"></div><div class="line"><span class="keyword">function</span> box(json)&#123; </div><div class="line">    alert(json.name); </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="二、CORS"><a href="#二、CORS" class="headerlink" title="二、CORS"></a>二、CORS</h2><p>  服务器端对于CORS的支持，主要就是通过设置Access-Control-Allow-Origin来进行的。如果浏览器检测到相应的设置，就可以允许Ajax进行跨域的访问。</p>
<h2 id="三、通过修改document-domain来跨子域"><a href="#三、通过修改document-domain来跨子域" class="headerlink" title="三、通过修改document.domain来跨子域"></a>三、通过修改document.domain来跨子域</h2><p>  将子域和主域的document.domain设为同一个主域.前提条件：这两个域名必须属于同一个基础域名!而且所用的协议，端口都要一致，否则无法利用document.domain进行跨域</p>
<p>  主域相同的使用document.domain</p>
<h2 id="四、使用window-name来进行跨域"><a href="#四、使用window-name来进行跨域" class="headerlink" title="四、使用window.name来进行跨域"></a>四、使用window.name来进行跨域</h2><p>  window对象有个name属性，该属性有个特征：即在一个窗口(window)的生命周期内,窗口载入的所有的页面都是共享一个window.name的，每个页面对window.name都有读写的权限，window.name是持久存在一个窗口载入过的所有页面中的</p>
<h2 id="五、使用HTML5中新引进的window-postMessage方法来跨域传送数据"><a href="#五、使用HTML5中新引进的window-postMessage方法来跨域传送数据" class="headerlink" title="五、使用HTML5中新引进的window.postMessage方法来跨域传送数据"></a>五、使用HTML5中新引进的window.postMessage方法来跨域传送数据</h2><p>  还有flash、在服务器上设置代理页面等跨域方式。个人认为window.name的方法既不复杂，也能兼容到几乎所有浏览器，这真是极好的一种跨域方法。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、JSONP&quot;&gt;&lt;a href=&quot;#一、JSONP&quot; class=&quot;headerlink&quot; title=&quot;一、JSONP&quot;&gt;&lt;/a&gt;一、JSONP&lt;/h2&gt;&lt;p&gt;  原理是：动态插入script标签，通过script标签引入一个js文件，这个js文件载入成功后会
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Git</title>
    <link href="http://yoursite.com/2017/06/06/Git/"/>
    <id>http://yoursite.com/2017/06/06/Git/</id>
    <published>2017-06-06T08:59:47.000Z</published>
    <updated>2017-06-06T10:09:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>当了这么长时间的程序员，突然发现对于<a href="https://git-scm.com/download/" target="_blank" rel="external">Git</a>好像不太会用，在这里，让我们一起学习一下<a href="https://git-scm.com/download/" target="_blank" rel="external">Git</a>的使用方法吧。</p>
<h2 id="Git初始化"><a href="#Git初始化" class="headerlink" title="Git初始化"></a>Git初始化</h2><p>Git 使用 git init 命令来初始化一个 Git 仓库，Git 的很多命令都需要在 Git 的仓库中运行，所以 git init 是使用 Git 的第一个命令。<br>在执行完成 git init 命令后，Git 仓库会生成一个 .git 目录，该目录包含了资源的所有元数据，其他的项目目录保持不变（不像 SVN 会在每个子目录生成 .svn 目录，Git 只在仓库的根目录生成 .git 目录）。<br>使用当前目录作为Git仓库，我们只需使它初始化。</p>
<p>使用当前目录作为Git仓库，我们只需使它初始化。该命令执行完后会在当前目录生成一个 .git 目录。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git init</div></pre></td></tr></table></figure>
<p>使用我们指定目录作为Git仓库。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git init newrepo</div></pre></td></tr></table></figure>
<p>初始化后，会在 newrepo 目录下会出现一个名为 .git 的目录，所有 Git 需要的数据和资源都存放在这个目录中。</p>
<p>如果当前目录下有几个文件想要纳入版本控制，需要先用 git add 命令告诉 Git 开始对这些文件进行跟踪，然后提交：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ git add *.c</div><div class="line">$ git add README</div><div class="line">$ git commit -m <span class="string">'初始化项目版本'</span></div></pre></td></tr></table></figure>
<h2 id="添加文件"><a href="#添加文件" class="headerlink" title="添加文件"></a>添加文件</h2><p>首先要明确下，所有的版本控制系统，只能跟踪文本文件的改动，比如txt文件，网页，所有程序的代码等，Git也不列外，版本控制系统可以告诉你每次的改动，但是图片，视频这些二进制文件，虽能也能由版本控制系统管理，但没法跟踪文件的变化，只能把二进制文件每次改动串起来，也就是知道图片从1kb变成2kb，但是到底改了啥，版本控制也不知道。</p>
<p>我在版本库newrepo目录下新建一个记事本文件 readme.txt 内容如下：11111111</p>
<h3 id="第一步：使用命令-git-add-readme-txt添加到暂存区里面去。如下"><a href="#第一步：使用命令-git-add-readme-txt添加到暂存区里面去。如下" class="headerlink" title="第一步：使用命令 git add readme.txt添加到暂存区里面去。如下"></a>第一步：使用命令 git add readme.txt添加到暂存区里面去。如下</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git add readme.txt</div></pre></td></tr></table></figure>
<h3 id="用命令-git-commit告诉Git，把文件提交到仓库。后面的是内容提示，可加可不加"><a href="#用命令-git-commit告诉Git，把文件提交到仓库。后面的是内容提示，可加可不加" class="headerlink" title="用命令 git commit告诉Git，把文件提交到仓库。后面的是内容提示，可加可不加"></a>用命令 git commit告诉Git，把文件提交到仓库。后面的是内容提示，可加可不加</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$  git commit -m <span class="string">'提交test.txt文件'</span></div></pre></td></tr></table></figure>
<p>现在我们已经提交了一个readme.txt文件了，我们下面可以通过命令git status来查看是否还有文件未提交，如下：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$  git status</div></pre></td></tr></table></figure>
<p>如果文件有改动知，提交修改和提交文件是一样的2步(第一步是git add  第二步是：git commit)。</p>
<h2 id="版本控制"><a href="#版本控制" class="headerlink" title="版本控制"></a>版本控制</h2><p>如上，我们已经学会了修改文件，现在我继续对readme.txt文件进行修改，再增加一行内容为33333333333333.并按照上述步骤进行提交。</p>
<p>现在我已经对readme.txt文件做了三次修改了，那么我现在想查看下历史记录，如何查呢？我们现在可以使用命令 git log 演示如下所示：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$  git <span class="built_in">log</span></div></pre></td></tr></table></figure>
<p>git log命令显示从最近到最远的显示日志，我们可以看到最近三次提交，最近的一次是,增加内容为333333.上一次是添加内容222222，第一次默认是 111111.如果嫌上面显示的信息太多的话，我们可以使用命令 git log –pretty=oneline 演示如下：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$  git <span class="built_in">log</span> –pretty=oneline</div></pre></td></tr></table></figure>
<p>现在我想使用版本回退操作，我想把当前的版本回退到上一个版本，要使用什么命令呢？可以使用如下2种命令，第一种是：git reset  –hard HEAD^ 那么如果要回退到上上个版本只需把HEAD^ 改成 HEAD^^ 以此类推。那如果要回退到前100个版本的话，使用上面的方法肯定不方便，我们可以使用下面的简便命令操作：git reset  –hard HEAD~100 即可。如果想回退到上一个版本的命令如下操作：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$  git reset  --hard HEAD^</div></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$  git reset  --hard HEAD~100</div></pre></td></tr></table></figure>
<p>再来查看下 readme.txt内容如下：通过命令cat readme.txt查看</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$  cat readme.txt</div></pre></td></tr></table></figure>
<p>我们看到 增加333333 内容我们没有看到了，但是现在我想回退到最新的版本，如：有333333的内容要如何恢复呢？我们可以通过版本号回退，使用命令方法如下：git reset  –hard 版本号 ，但是现在的问题假如我已经关掉过一次命令行或者333内容的版本号我并不知道呢？要如何知道增加3333内容的版本号呢？可以通过如下命令即可获取到版本号：git reflog  演示如下：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$  git reflog</div></pre></td></tr></table></figure>
<p>通过上面的显示我们可以知道，增加内容3333的版本号是 6fcfc89.我们现在可以命令git reset  –hard 6fcfc89来恢复了。演示如下：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git reset  --hard 6fcfc89</div></pre></td></tr></table></figure>
<p>可以看到 目前已经是最新的版本了。 </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;当了这么长时间的程序员，突然发现对于&lt;a href=&quot;https://git-scm.com/download/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Git&lt;/a&gt;好像不太会用，在这里，让我们一起学习一下&lt;a href=&quot;https://git-
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>BlueLake博客主题的详细配置</title>
    <link href="http://yoursite.com/2017/05/25/BlueLake%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E7%9A%84%E8%AF%A6%E7%BB%86%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2017/05/25/BlueLake博客主题的详细配置/</id>
    <published>2017-05-25T03:41:18.000Z</published>
    <updated>2017-06-06T08:53:10.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://hexo.io/themes/" target="_blank" rel="external">BlueLake主题</a>写了有一段时间了，经常会有朋友发消息给我问一些配置的问题，这篇博文主要也是为了解决这些问题。主题以简洁轻量自居(实则简陋)，去掉了Jquery和Fancybox,用原生JS实现站内搜索功能和回到顶部效果。这个主题只是一个小小的雏形，期待您来帮助它成长。</p>
<p>在阅读本文之前，假定您已经成功安装了Hexo，并使用 Hexo 提供的命令创建了一个静态博客。Hexo是一个快速、简洁且高效的博客框架。Hexo基于Node.js ，使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
<blockquote>
<p>需要特别注意的是Hexo有两个_config.yml配置文件，一份位于站点根目录下，主要包含 Hexo 站点本身的配置，下文中会称为<code><strong>根_config.yml</strong></code>；另一份位于主题目录下（themes/主题名/_config.yml），这份配置由主题作者提供，主要用于配置主题相关的选项,下文中会称为主题_config.yml。</p>
</blockquote>
<h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h2><p>您可以直接到<a href="https://github.com/Jasmine-love/hexo-theme-BlueLake" target="_blank" rel="external">BlueLake发布</a>页下载，然后解压拷贝到themes目录下，修改配置即可。<br>不过我还是推荐使用GIT来checkout代码，之后也可以通过git pull来快速更新。</p>
<h3 id="1-1-安装主题"><a href="#1-1-安装主题" class="headerlink" title="1.1 安装主题"></a>1.1 安装主题</h3><p>在根目录下打开终端窗口：</p>
<p>git bash</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span> https://github.com/chaooo/hexo-theme-BlueLake.git themes/BlueLake</div></pre></td></tr></table></figure>
<h3 id="1-2-安装主题渲染器"><a href="#1-2-安装主题渲染器" class="headerlink" title="1.2 安装主题渲染器"></a>1.2 安装主题渲染器</h3><p>BlueLake是基于jade和stylus写的，所以需要安装hexo-renderer-jade和hexo-renderer-stylus来渲染。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-renderer-jade --save</div><div class="line">$ npm install hexo-renderer-stylus --save</div></pre></td></tr></table></figure>
<h3 id="1-3-启用主题"><a href="#1-3-启用主题" class="headerlink" title="1.3 启用主题"></a>1.3 启用主题</h3><p>打开根_config.yml配置文件，找到theme字段，将其值改为BlueLake(先确认主题文件夹名称是否为BlueLake)</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">theme: BlueLake</div></pre></td></tr></table></figure>
<h3 id="1-4-验证"><a href="#1-4-验证" class="headerlink" title="1.4 验证"></a>1.4 验证</h3><p>首先启动 Hexo 本地站点，并开启调试模式：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo s --debug</div></pre></td></tr></table></figure>
<p>在服务启动的过程，注意观察命令行输出是否有任何异常信息，如果你碰到问题，这些信息将帮助他人更好的定位错误。 当命令行输出中提示出：INFO Hexo is running at <a href="http://0.0.0.0:4000/" target="_blank" rel="external">http://0.0.0.0:4000/</a>. Press Ctrl+C to stop.</p>
<p>此时即可使用浏览器访问 <a href="http://localhost:4000，检查站点是否正确运行。" target="_blank" rel="external">http://localhost:4000，检查站点是否正确运行。</a></p>
<h3 id="1-5-更新主题"><a href="#1-5-更新主题" class="headerlink" title="1.5 更新主题"></a>1.5 更新主题</h3><p>今后若主题添加了新功能正是您需要的，您可以直接git pull来更新主题。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> themes/BlueLake</div><div class="line">git pull</div></pre></td></tr></table></figure>
<h2 id="2-配置"><a href="#2-配置" class="headerlink" title="2. 配置"></a>2. 配置</h2><h3 id="2-1-配置网站头部显示文字"><a href="#2-1-配置网站头部显示文字" class="headerlink" title="2.1 配置网站头部显示文字"></a>2.1 配置网站头部显示文字</h3><p>打开<code>根_config.yml</code>，找到：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">title: </div><div class="line">subtitle: </div><div class="line">description:</div><div class="line">about:</div></pre></td></tr></table></figure>
<p>title和subtitle分别是网站主标题和副标题，会显示在网站头部；description在网站界面不会显示，内容会加入网站源码的meta标签中，主要用于SEO；author就填写网站所有者的名字，会在网站底部的Copyright处有所显示。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://hexo.io/themes/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;BlueLake主题&lt;/a&gt;写了有一段时间了，经常会有朋友发消息给我问一些配置的问题，这篇博文主要也是为了解决这些问题。主题以简洁轻量自居(实则
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>缓存</title>
    <link href="http://yoursite.com/2017/05/24/newBlog/"/>
    <id>http://yoursite.com/2017/05/24/newBlog/</id>
    <published>2017-05-24T09:43:48.000Z</published>
    <updated>2017-05-24T09:48:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>前端用到的的缓存一般有三种Cookie, LocalStorage 与 SessionStorage</p>
<h2 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h2><p>Cookie 是小甜饼的意思。顾名思义，cookie 确实非常小，它的大小限制为4KB左右，是网景公司的前雇员 Lou Montulli 在1993年3月的发明。它的主要用途有保存登录信息，比如你登录某个网站市场可以看到“记住密码”，这通常就是通过在 Cookie 中存入一段辨别用户身份的数据来实现的。</p>
<h2 id="LocalStorage"><a href="#LocalStorage" class="headerlink" title="LocalStorage"></a>LocalStorage</h2><p>localStorage 是 HTML5 标准中新加入的技术，它并不是什么划时代的新东西。早在 IE 6 时代，就有一个叫 userData 的东西用于本地存储，而当时考虑到浏览器兼容性，更通用的方案是使用 Flash。而如今，localStorage 被大多数浏览器所支持，如果你的网站需要支持 IE6+，那以 userData 作为你的 polyfill 的方案是种不错的选择。</p>
<h2 id="SessionStorage"><a href="#SessionStorage" class="headerlink" title="SessionStorage"></a>SessionStorage</h2><p>sessionStorage 与 localStorage 的接口类似，但保存数据的生命周期与 localStorage 不同。做过后端开发的同学应该知道 Session 这个词的意思，直译过来是“会话”。而 sessionStorage 是一个前端的概念，它只是可以将一部分数据在当前会话中保存下来，刷新页面数据依旧存在。但当页面关闭后，sessionStorage 中的数据就会被清空。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前端用到的的缓存一般有三种Cookie, LocalStorage 与 SessionStorage&lt;/p&gt;
&lt;h2 id=&quot;Cookie&quot;&gt;&lt;a href=&quot;#Cookie&quot; class=&quot;headerlink&quot; title=&quot;Cookie&quot;&gt;&lt;/a&gt;Cookie&lt;/h2
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hexo 介绍</title>
    <link href="http://yoursite.com/2017/05/24/hello-world/"/>
    <id>http://yoursite.com/2017/05/24/hello-world/</id>
    <published>2017-05-24T09:04:57.390Z</published>
    <updated>2017-05-24T09:27:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
